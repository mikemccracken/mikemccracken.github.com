<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>michael-mccracken.net (languages)</title><link>http://michael-mccracken.net/</link><description></description><atom:link rel="self" href="http://michael-mccracken.net/categories/languages.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 13 Nov 2015 19:12:38 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>More out of date links</title><link>http://michael-mccracken.net/2012/10/selected-links/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hammerprinciple.com/therighttool"&gt;Programming Languages · Hammer Principle&lt;/a&gt;
    Very interesting survey site to answer the question "what language is right for what task?"&lt;/li&gt;
&lt;li&gt;&lt;a href="http://james-iry.blogspot.co.uk/2010/05/types-la-chart.html"&gt;One Div Zero: Types à la Chart&lt;/a&gt;
    A chart of languages according to type power/safety. Seems reasonable. Made me curious about the ones in the top right. &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/philsquared/Catch/wiki"&gt;Home · philsquared/Catch Wiki&lt;/a&gt;
    C++ unit testing framework, all in headers, looks nice.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ferd.ca/an-open-letter-to-the-erlang-beginner-or-onlooker.html"&gt;ferd.ca -&amp;gt; An Open Letter to the Erlang Beginner (or Onlooker)&lt;/a&gt;
    Interesting, balanced article about what makes erlang nice. &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://worrydream.com/oatmeal/blind.html"&gt;"Research is a blind date with knowledge." worrydream.com/oatmeal/blind.…&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://mail.python.org/pipermail/pypy-dev/2012-October/010602.html"&gt;Splitting RPython (the language) and PyPy (a python interpreter) plan: mail.python.org/pipermail/pypy…&lt;/a&gt;
    Sounds interesting. I wonder if RPython will grow in popularity separately.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://saltandfat.com/post/33437971658"&gt;Double-corn tortillas&lt;/a&gt;
    I'd love to try this sometime.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/clips/pattern"&gt;clips/pattern · GitHub&lt;/a&gt;
    Web-mining in python. Lots of functionality here, BSD license.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.brainpickings.org/index.php/2012/06/12/the-art-of-coffee-1961/"&gt;The Art of Coffee: A Mad Men Era Short Film | Brain Pickings&lt;/a&gt;
    I loved "This is Coffee!". 12 minute promotional short film from 1961 about coffee. It's wonderful to imagine the worn old mugs of my grandparents' generation new again, filled with something better than the electric-percolated canned junk I know they drank. Also great to see the Chemex in there, exactly the same as I use it today.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://worrydream.com/LearnableProgramming/"&gt;Learnable Programming&lt;/a&gt;
    Very clear and well-argued essay about how to make a more-understandable programming environment. I agreed with everything, and was left wondering how to apply this line of thought to more complex software. (Everyone has seen this by the time I post this list.)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://robrohan.com/2009/09/14/objc-signaturevo/"&gt;@objc.signature(‘v@:@@o^@’) | Times New Rohan&lt;/a&gt;
    List of objc.signature codes &lt;/li&gt;
&lt;/ul&gt;</description><category>1961</category><category>c-plus-plus</category><category>coffee</category><category>erlang</category><category>film</category><category>javascript</category><category>languages</category><category>learning</category><category>objc signature</category><category>patterns</category><category>programming</category><category>programming-languages</category><category>recipe</category><category>software</category><category>teaching</category><category>testing</category><category>tortilla</category><category>types</category><guid>http://michael-mccracken.net/2012/10/selected-links/</guid><pubDate>Thu, 25 Oct 2012 19:35:00 GMT</pubDate></item><item><title>Links for February 7th through February 9th</title><link>http://michael-mccracken.net/2012/02/links-for-february-7th-through-february-9th/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;My shared links for February 7th through February 9th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://twitter.github.com/effectivescala/"&gt;Effective Scala&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://courses.csail.mit.edu/6.851/spring12/lectures"&gt;Video lectures for 6.851, advanced data structures&lt;/a&gt; - Prof. Erik Demaine's 6.851 lectures recorded with synchronized lecture notes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/tobami/codespeed/"&gt;tobami/codespeed - GitHub&lt;/a&gt; - Python and django performance monitoring tool. Used for speed.pypy.org&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://tratt.net/laurie/research/publications/html/tratt__experiences_with_an_icon_like_expression_evaluation_system/"&gt;Experiences with an Icon-like Expression Evaluation System&lt;/a&gt; - Interesting and accessible trip through Icon's expression semantics and Converge.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/amoffat/pbs"&gt;amoffat/pbs - GitHub&lt;/a&gt; - Clever library to let you start subprograms from python as if they were python functions. Much more usable than the stuff I'm used to in the pystdlib...
Almost as concise as backticks and looks more flexible too (ie, handles piping)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://tratt.net/laurie/tech_articles/articles/fast_enough_vms_in_fast_enough_time"&gt;Laurence Tratt: Fast Enough VMs in Fast Enough Time&lt;/a&gt; - "If you can stomach the smell, put yourself briefly in the shoes of a programming language designer. What you want to do is create new programming languages, combining new and old ideas into a fresh whole. It sounds like a fun, intellectually demanding job, and occasionally it is. However, we know from experience that languages that exist solely in the mind or on paper are mostly worthless: it is only when they are implemented and we can try them out that we can evaluate them. As well as a language design, therefore, we need a corresponding language implementation."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.mobiata.com/blog/2012/02/08/twine-string-management-ios-mac-os-x"&gt;Introducing Twine: String Management for iOS, Mac OS X, and Android Development - Mobiata Blog&lt;/a&gt; - In this post I hope to show you just how bad the standard localization process is for iOS and Mac OS X apps, and how we have found a way to make it much easier for developers to localize their apps and then maintain these localizations and translations over time. In addition, I'll show you how you can easily share your translations across multiple apps and platforms. This will save your company money that would otherwise be spent duplicating your translation efforts, especially if you are developing for both iOS and Android.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://live.gnome.org/Conduit"&gt;Conduit - GNOME Live!&lt;/a&gt; - Conduit is a synchronization application for GNOME. It allows you to synchronize your files, photos, emails, contacts, notes, calendar data and any other type of personal information and synchronize that data with another computer, an online service, or even another electronic device.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conduit manages the synchronization and conversion of data into other formats. For example, Conduit allows you to :&lt;/p&gt;
&lt;p&gt;Synchronize your Tomboy notes with another computer
Synchronize your your PIM data to your mobile phone, iPod, Nokia Internet tablet, or between computers
Upload photos to Flickr, Picasa, SmugMug, ShutterFly and your iPod
Any combination you can imagine, Conduit will take care of the conversion and synchronization.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://text-processing.com/demo/sentiment/"&gt;Python NLTK Sentiment Analysis with Text Classification Demo&lt;/a&gt; - neat demo but the results aren't intuitive. maybe the training set isn't great.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://stephenholiday.com/articles/2011/gender-prediction-with-python/"&gt;Gender Prediction with Python : Stephen Holiday&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>best-practices</category><category>classification</category><category>compiler</category><category>data-structures</category><category>demo</category><category>generators</category><category>gnome</category><category>icon</category><category>ios</category><category>languages</category><category>lectures</category><category>links</category><category>linux</category><category>localization</category><category>mit</category><category>monitoring</category><category>nltk</category><category>osx</category><category>performance</category><category>pinboard-links</category><category>pl</category><category>programming</category><category>python</category><category>scala</category><category>scripting</category><category>sentiment</category><category>shell</category><category>sync</category><category>text-classification</category><category>tool</category><category>video-lectures</category><category>vm</category><category>web</category><guid>http://michael-mccracken.net/2012/02/links-for-february-7th-through-february-9th/</guid><pubDate>Thu, 09 Feb 2012 22:46:00 GMT</pubDate></item><item><title>Links for January 20th through January 21st</title><link>http://michael-mccracken.net/2012/01/links-for-january-20th-through-january-21st/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;My shared links for January 20th through January 21st:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.kickstarter.com/projects/1380180715/mail-pilot-email-reimagined"&gt;Mail Pilot: Email Reimagined by Josh Milas &amp;amp; Alex Obenauer — Kickstarter&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://--"&gt;“Getting Into Modeling With CouchCocoa”&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://corp.galois.com/"&gt;Galois - Home&lt;/a&gt; - Contract Research organization in Portland who makes use of functional programming.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://book.realworldhaskell.org/read/"&gt;Book: Real World Haskell&lt;/a&gt; - Full text of book "real world haskell"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.cs.nott.ac.uk/~gmh/book.html"&gt;Programming in Haskell&lt;/a&gt; - well-reviewed intro haskell book&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.bluebytesoftware.com/blog/2010/01/03/ABriefRetrospectiveOnTransactionalMemory.aspx"&gt;Joe Duffy's Weblog : A (brief) retrospective on transactional memory&lt;/a&gt; - Not really brief. Lots of interesting detail about TM in practice.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.ezyang.com/2011/11/how-to-read-haskell/"&gt;How to read Haskell like Python : Inside 233&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>book</category><category>code</category><category>concurrency</category><category>functional</category><category>government</category><category>haskell</category><category>HPC</category><category>languages</category><category>links</category><category>pinboard-links</category><category>portland</category><category>programming</category><category>reading</category><category>STM</category><category>TM</category><category>Transactional-Memory</category><guid>http://michael-mccracken.net/2012/01/links-for-january-20th-through-january-21st/</guid><pubDate>Mon, 23 Jan 2012 04:50:00 GMT</pubDate></item><item><title>Links for January 12th through January 18th</title><link>http://michael-mccracken.net/2012/01/links-for-january-12th-through-january-18th/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;My shared links for January 12th through January 18th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://stevenf.com/notes/"&gt;Steven Frank: Notes: Home&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.stanford.edu/~ttinoco/cvxpy/"&gt;CVXPY documentation -- CVXPY v0.0.1 documentation&lt;/a&gt; - Optimization, uses Disciplined Convex Programming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://chplib.wordpress.com/2010/02/04/progression-supporting-optimisation-in-haskell/"&gt;Progression: Supporting Optimisation in Haskell « Communicating Haskell Processes&lt;/a&gt; - Tools for benchmarking haskell performance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.jamesmolloy.co.uk/tutorial_html/1.-Environment%20setup.html"&gt;1.-Environment setup&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.gprolog.org/"&gt;The GNU Prolog web site&lt;/a&gt; - Free GNU Prolog - supports ISO&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.ciaohome.org/"&gt;The Ciao System&lt;/a&gt; - "Ciao is a general-purpose programming language which supports logic, constraint, functional, higher-order, and object-oriented programming styles. Its main design objectives are high expressive power, extensibility, safety, reliability, and efficient execution"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://marmalade-repo.org/"&gt;Marmalade: Spreadable Elisp&lt;/a&gt; - A repository for elisp packages. Uses ELPA. Didn't work when I tried it, but maybe a firewall issue?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.haskell.org/haddock/"&gt;Haddock Documentation Generator for Haskell&lt;/a&gt; - Really nice documentation generator for Haskell code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I particularly like the synopsis tab.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://caml.inria.fr/pub/ml-archives/caml-list/2002/11/64c14acb90cb14bedb2cacb73338fb15.fr.html"&gt;Archives of the Caml mailing list &amp;gt; Message from Xavier Leroy [2002]&lt;/a&gt; - From 2002:
"In summary: there is no SMP support in OCaml, and it is very very
unlikely that there will ever be.  If you're into parallelism, better
investigate message-passing interfaces."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://caml.inria.fr/pub/ml-archives/caml-list/2002/04/a20d07d890dc2ebd525fbe3eed177492.en.html"&gt;Archives of the Caml mailing list &amp;gt; Message from Benjamin C. Pierce&lt;/a&gt; - Lots of links about CPS and continuations in Ocaml and others.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>caml</category><category>Cite:rentzsch</category><category>concurrency</category><category>continuations</category><category>cps</category><category>cvxpy</category><category>documentation</category><category>elisp</category><category>emacs</category><category>functional-programming</category><category>funny</category><category>haskell</category><category>Kernel</category><category>languages</category><category>links</category><category>lisp</category><category>modeling</category><category>ocaml</category><category>optimization</category><category>package-manager</category><category>parallelism</category><category>performance</category><category>pinboard-links</category><category>profiling</category><category>programming</category><category>prolog</category><category>python</category><category>sml</category><category>tools</category><guid>http://michael-mccracken.net/2012/01/links-for-january-12th-through-january-18th/</guid><pubDate>Thu, 19 Jan 2012 19:44:00 GMT</pubDate></item><item><title>Links for September 27th through October 14th</title><link>http://michael-mccracken.net/2011/10/links-for-september-27th-through-october-14th/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;My shared links for September 27th through October 14th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://code.google.com/p/pyprocessing/"&gt;pyprocessing - A Processing-like environment for doing graphics with Python - Google Project Hosting&lt;/a&gt; - processing in python. uses pyglet. installs very easily&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.ece.ucdavis.edu/~jowens/commonerrors.html"&gt;Common Errors in Technical Writing&lt;/a&gt; - A list of common errors and peeves in technical writing. Very useful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://soft.vub.ac.be/~smarr/renaissance/"&gt;Renaissance: Harness Emergence to Avoid the Concurrency Trap&lt;/a&gt; - Languages for non-deterministic computing, and a manycore squeak VM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://waxy.org/2011/09/geeks_guide_to_portland_2011/"&gt;Geek's Guide to Portland 2011 - Waxy.org&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://candyspotting.com/index.php/cards/holiday/houndstooth-snowsuit.html"&gt;Candyspotting - Houndstooth Snowsuit Card - Holiday&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.llvm.org/2011/09/greedy-register-allocation-in-llvm-30.html"&gt;LLVM Project Blog: Greedy Register Allocation in LLVM 3.0&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://ergo.human.cornell.edu/CUESitStand.html"&gt;CUergo: Sitting and Standing&lt;/a&gt; - Short version: sit at your desk, but get up every 20 minutes and move around for 2 minutes. That's probably a good time to focus your eyes somewhere else too.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pandas.sourceforge.net/"&gt;pandas: powerful Python data analysis toolkit -- pandas v0.4.0 documentation&lt;/a&gt; - python package for labeled multidimensional data&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>bibtex</category><category>christmas</category><category>concurrency</category><category>exascale</category><category>food</category><category>gift</category><category>graphics</category><category>greeting-card</category><category>guide</category><category>languages</category><category>latex</category><category>links</category><category>ly</category><category>pinboard-links</category><category>portland</category><category>processing</category><category>programming</category><category>python</category><category>research</category><category>sly</category><category>smalltalk</category><category>squeak</category><category>tips</category><category>travel</category><category>visualization</category><category>winter</category><category>writing</category><guid>http://michael-mccracken.net/2011/10/links-for-september-27th-through-october-14th/</guid><pubDate>Mon, 24 Oct 2011 23:58:00 GMT</pubDate></item></channel></rss>