<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>michael-mccracken.net (lisp)</title><link>http://michael-mccracken.net/</link><description></description><language>en</language><lastBuildDate>Fri, 27 Jun 2014 12:24:51 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Links for January 11th</title><link>http://michael-mccracken.net/2012/01/links-for-january-11th-2/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for January 11th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://tromey.com/elpa/"&gt;Welcome to ELPA&lt;/a&gt; - emacs lisp package archive&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://queue.acm.org/detail.cfm?id=2038036"&gt;OCaml for the Masses - ACM Queue&lt;/a&gt; - Why the next language you learn should be functional&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;by Yaron Minsky, Jane Street&lt;/p&gt;
&lt;p&gt;Sometimes, the elegant implementation is a function. Not a method. Not a class. Not a framework. Just a function. - John Carmack&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.michaeleisen.org/blog/?p=807"&gt;Elsevier-funded NY Congresswoman Carolyn Maloney Wants to Deny Americans Access to Taxpayer Funded Research&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://byrdandbelle.bigcartel.com/"&gt;byrd and belle&lt;/a&gt; - Nice looking sleeves with wool felt and leather&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>accessories</category><category>case</category><category>elisp</category><category>emacs</category><category>functional</category><category>google</category><category>hn</category><category>ipad</category><category>iphone</category><category>journals</category><category>kindle</category><category>laptop</category><category>links</category><category>lisp</category><category>ocaml</category><category>open-access</category><category>package-manager</category><category>personalized-search</category><category>pinboard-links</category><category>programming</category><category>publication</category><category>research</category><category>search</category><category>sleeve</category><guid>http://michael-mccracken.net/2012/01/links-for-january-11th-2/</guid><pubDate>Fri, 27 Jan 2012 19:52:00 GMT</pubDate></item><item><title>Links for January 12th through January 18th</title><link>http://michael-mccracken.net/2012/01/links-for-january-12th-through-january-18th/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for January 12th through January 18th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://stevenf.com/notes/"&gt;Steven Frank: Notes: Home&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.stanford.edu/~ttinoco/cvxpy/"&gt;CVXPY documentation -- CVXPY v0.0.1 documentation&lt;/a&gt; - Optimization, uses Disciplined Convex Programming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://chplib.wordpress.com/2010/02/04/progression-supporting-optimisation-in-haskell/"&gt;Progression: Supporting Optimisation in Haskell « Communicating Haskell Processes&lt;/a&gt; - Tools for benchmarking haskell performance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.jamesmolloy.co.uk/tutorial_html/1.-Environment%20setup.html"&gt;1.-Environment setup&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.gprolog.org/"&gt;The GNU Prolog web site&lt;/a&gt; - Free GNU Prolog - supports ISO&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.ciaohome.org/"&gt;The Ciao System&lt;/a&gt; - "Ciao is a general-purpose programming language which supports logic, constraint, functional, higher-order, and object-oriented programming styles. Its main design objectives are high expressive power, extensibility, safety, reliability, and efficient execution"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://marmalade-repo.org/"&gt;Marmalade: Spreadable Elisp&lt;/a&gt; - A repository for elisp packages. Uses ELPA. Didn't work when I tried it, but maybe a firewall issue?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.haskell.org/haddock/"&gt;Haddock Documentation Generator for Haskell&lt;/a&gt; - Really nice documentation generator for Haskell code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I particularly like the synopsis tab.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://caml.inria.fr/pub/ml-archives/caml-list/2002/11/64c14acb90cb14bedb2cacb73338fb15.fr.html"&gt;Archives of the Caml mailing list &amp;gt; Message from Xavier Leroy [2002]&lt;/a&gt; - From 2002:
"In summary: there is no SMP support in OCaml, and it is very very
unlikely that there will ever be.  If you're into parallelism, better
investigate message-passing interfaces."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://caml.inria.fr/pub/ml-archives/caml-list/2002/04/a20d07d890dc2ebd525fbe3eed177492.en.html"&gt;Archives of the Caml mailing list &amp;gt; Message from Benjamin C. Pierce&lt;/a&gt; - Lots of links about CPS and continuations in Ocaml and others.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>Cite:rentzsch</category><category>Kernel</category><category>caml</category><category>concurrency</category><category>continuations</category><category>cps</category><category>cvxpy</category><category>documentation</category><category>elisp</category><category>emacs</category><category>functional-programming</category><category>funny</category><category>haskell</category><category>languages</category><category>links</category><category>lisp</category><category>modeling</category><category>ocaml</category><category>optimization</category><category>package-manager</category><category>parallelism</category><category>performance</category><category>pinboard-links</category><category>profiling</category><category>programming</category><category>prolog</category><category>python</category><category>sml</category><category>tools</category><guid>http://michael-mccracken.net/2012/01/links-for-january-12th-through-january-18th/</guid><pubDate>Thu, 19 Jan 2012 19:44:00 GMT</pubDate></item><item><title>Links for November 19th through November 25th</title><link>http://michael-mccracken.net/2011/12/links-for-november-19th-through-november-25th/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for November 19th through November 25th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.ft.com/intl/cms/s/2/5749fbb8-100d-11e1-a468-00144feabdc0.html#axzz1emPiPJlK"&gt;Norway: an Eden with wifi - FT.com&lt;/a&gt; - "Visiting Norway during the global crisis felt like prosperity tourism, or "wealth porn"."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://axisofeval.blogspot.com/2011/11/extensible-way-of-thinking.html"&gt;The Axis of Eval: The extensible way of thinking&lt;/a&gt; - An interesting way of looking at requiring types: it hampers extensibility…&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://launchpad.net/u1db"&gt;U1DB in Launchpad&lt;/a&gt; - Potential replacement for desktopcouch&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blogs.oracle.com/run/entry/how_john_got_15x_improvement"&gt;How John Got 15x Improvement Without Really Trying (Compile My Code)&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>case</category><category>couchdb</category><category>database</category><category>desktop</category><category>extensibility</category><category>gift</category><category>kindle</category><category>links</category><category>lisp</category><category>mit-ai</category><category>norway</category><category>open-source</category><category>optimization</category><category>pinboard-links</category><category>programming</category><category>prosperity</category><category>rms</category><category>sync</category><category>types</category><category>ubuntu</category><guid>http://michael-mccracken.net/2011/12/links-for-november-19th-through-november-25th/</guid><pubDate>Tue, 27 Dec 2011 20:08:00 GMT</pubDate></item><item><title>Links for August 12th through August 16th</title><link>http://michael-mccracken.net/2011/08/links-for-august-12th-through-august-16th/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for August 12th through August 16th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://letoverlambda.com/index.cl/toc"&gt;Let Over Lambda&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://fexpr.blogspot.com/2011/04/fexpr.html"&gt;Structural insight: Fexpr&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.businessofsoftware.org/2011/08/derek-sivers-at-business-of-software-2010-video-and-transcript-of-talk.html"&gt;Derek Sivers at Business of Software 2010. Video and transcript of talk - Business of Software Blog&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://expertlabs.org/2011/08/expert-labs-recommendations-for-open-gov.html"&gt;A More Social Open Government - Expert Labs&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.cocos2d-iphone.org/about"&gt;About | cocos2d for iPhone&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.gaborcselle.com/2010/02/how-to-replace-imap.html"&gt;Gabor hits Send: How to Replace IMAP&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>Cite:rentzsch</category><category>business</category><category>ebook</category><category>entrepreneurship</category><category>links</category><category>lisp</category><category>pinboard-links</category><category>programming</category><guid>http://michael-mccracken.net/2011/08/links-for-august-12th-through-august-16th/</guid><pubDate>Mon, 22 Aug 2011 18:45:00 GMT</pubDate></item><item><title>Link: The Axis of Eval: What's a condition system and why do you want one?</title><link>http://michael-mccracken.net/2011/06/link-the-axis-of-eval-whats-a-condition-system-and-why-do-you-want-one/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;A nice explanation of conditions in Common Lisp from Manuel Simoni, with example code. This looks like a major improvement on the exception handling in any language I've used for anything big.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://axisofeval.blogspot.com/2011/04/whats-condition-system-and-why-do-you.html"&gt;The Axis of Eval: What's a condition system and why do you want one?&lt;/a&gt;.&lt;/p&gt;</description><category>conditions</category><category>exceptions</category><category>lisp</category><category>programming</category><guid>http://michael-mccracken.net/2011/06/link-the-axis-of-eval-whats-a-condition-system-and-why-do-you-want-one/</guid><pubDate>Wed, 29 Jun 2011 00:08:00 GMT</pubDate></item></channel></rss>