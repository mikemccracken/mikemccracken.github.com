<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>michael-mccracken.net (mac)</title><link>http://michael-mccracken.net/</link><description></description><language>en</language><lastBuildDate>Fri, 27 Jun 2014 10:00:54 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Mac IRC clients</title><link>http://michael-mccracken.net/2012/12/mac-irc-clients.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;At Canonical, we are spread all over and keep in touch via IRC. I've
tried out a bunch of IRC clients, but nothing is quite right. I'll
explain. Here's a list of some things I want from a client - it's
probably not complete, but it'll do for now:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Don't crash. A bouncer makes crashes recoverable, but I shouldn't
 have to use one just to keep the backlog around.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I need to search the backlog. Incremental search is best.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Show multiple channels at once, in one window.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Highlight mentions of my nick so I can glance at a window and see if anyone's asking me something. Use Growl or notification center, too.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make it obvious when I've disconnected, and reconnect robustly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Let me hide/fade out join/leave notifications and other admin messages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep my place so I know what messages are new.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make it obvious which channel I'm looking at, and even more
 obvious which channel I'm about to type in. (Nothing is great at this)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spell-check is nice, but autocorrect is awful for IRC and
 technical discussions. Needs a global switch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don't show unread counts. Some channels are chatty and I'm just in them listening for my name.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here are the clients I've tried and why they aren't quite perfect:&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://colloquy.info"&gt;Colloquy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Colloquy is a nice full-featured open source client. I've used it the
most. However - it doesn't show multiple channels in one window at the
same time, and doesn't keep your place. I've had some problems with
reconnection, where I thought IRC was quiet when I was actually just
disconnected and didn't know it.&lt;/p&gt;
&lt;p&gt;I have to turn autocorrect off for each room I'm in, which I only
remember after the first time it really annoys me by mangling some
jargon.&lt;/p&gt;
&lt;p&gt;There's also some general buggy behavior, and I have a short list of
bugs I'd like to report someday, but I don't have time to fix them.&lt;/p&gt;
&lt;p&gt;Years ago I hacked my own version of a place marker that I liked, but
I can't remember why it didn't make it in, and of course the code is
lost now.&lt;/p&gt;
&lt;p&gt;The backlog search looks like it should be powerful, but in my
experience it just doesn't work - it never displays any results. I'm
not sure what the deal is there.&lt;/p&gt;
&lt;p&gt;(As a side note, Colloquy's iPhone app is the only iPhone IRC client
I've used. It seems to work fine, and I don't use it enough to have
specific gripes. Just having to have IRC open on my phone is
guaranteed to annoy me more than the software itself could.)&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://www.emacswiki.org/ERC"&gt;Emacs ERC&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;My current setup is just to run ERC in an emacs window alongside my
code editing.  This has super flexible window splitting and size
management and unbeatable search for your backlog, since it's just
another emacs buffer. There's another nice benefit - if you're writing
about code, emacs' tab-completion for strings across all buffers means
that you can easily autocomplete SomeReallyLongFunctionName in
chats. This saves a lot of typing and cut n' pasting. When you do need
to cut n' paste, it's nicer to do it between emacs buffers than
between apps.&lt;/p&gt;
&lt;p&gt;The defaults are not ideal, as usual with emacs you need to dig around
to find a good setup.&lt;/p&gt;
&lt;p&gt;There's a module to colorize nicknames according to a hash of the
name, so it's easier to tell people apart. Other clients have similar
features but I think I like emacs' the best for some reason - maybe
the palette is nicer.&lt;/p&gt;
&lt;p&gt;There's a module to mark your place that only works if you left the
cursor in the backlog, which is a little weird. It will highlight my
nick when mentioned, but not the whole line.&lt;/p&gt;
&lt;p&gt;Since it's open source, I have the same problem as Colloquy, it's
hackable, but I don't really have time for that. And emacs is fun to
hack on, so it's a potentially dangerous time sink.&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://conceitedsoftware.com/products/linkinus"&gt;Linkinus&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is a nice client with some minor flaws and a little flakiness. I
liked it but moved on because of minor annoyances.&lt;/p&gt;
&lt;p&gt;It has a kind-of nifty "conversation tracking" feature that tries to
highlight messages in a back-and-forth when you hover over it with the
mouse (but only in the currently selected channel). It's not really
that useful, but I think it could be if pushed further. I'd like to
see more clients try this kind of thing, since separating multiple
concurrent conversations is hard on IRC, and it can be hard to avoid
them.&lt;/p&gt;
&lt;p&gt;Lets you display multiple channels in one window, but that needs some
improvement. There's just one text-entry field so it's easy to type
something to the wrong channel. &lt;/p&gt;
&lt;p&gt;The split display has some issues. The split channel views don't show
you the channel name anywhere, and in some cases don't even show you
the channel topic, which may or may not be helpful anyway. So it can
take some effort to figure out what channel you're looking at,
especially if there are many of the same people talking on two
channels.&lt;/p&gt;
&lt;p&gt;It can save a set of channels as a group, but it doesn't save the
relative sizes of the splits in the group, so if you want to flip
between groups, you'd better be OK with even splits.&lt;/p&gt;
&lt;p&gt;Finally, it only supports vertical splits, so with more than two
channels, you just get a couple unreadably long lines per channel.&lt;/p&gt;
&lt;p&gt;It has a very barebones backlog search, but it does work.&lt;/p&gt;
&lt;p&gt;They've also clearly tried to re-design the account setup / prefs
experience, but I'm not a big fan of an inspector palette - I wanted
to compare settings between two servers and it will only show me one
at a time. This was also the biggest point of flakiness, where some
edits wouldn't commit and I couldn't tell if the settings were being
changed.&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://www.codeux.com/textual/"&gt;Textual&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Textual is an open-source app
&lt;a href="http://github.com/Codeux/Textual"&gt;(github.com/Codeux/Textual)&lt;/a&gt; that
is for sale on the Mac app store. This is an interesting approach that
I think has some merit - people may still contribute code or bug
fixes, but it's also nice to know that if the app ever gets abandoned,
it could be resurrected. That said, I tried building from source to
enable a quick hack once but the master branch didn't build for me, so
they're not trying to make it easy.&lt;/p&gt;
&lt;p&gt;It lets me hide some admin messages, has automatic &amp;amp;
manual scrollback markers to keep track of what I've missed.&lt;/p&gt;
&lt;p&gt;This has a setting to "Track conversations using nickname
highlighting" but I couldn't really tell what it was doing.&lt;/p&gt;
&lt;p&gt;This also has a pretty barebones search, but again, it works.&lt;/p&gt;
&lt;p&gt;I tried this for a few days and liked it, but ultimately switched
away, I think mostly because you can't display multiple channels -
there's just one window and it doesn't split up.&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://mediaware.sk/ware/?page_id=35"&gt;Mango&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I haven't tried Mango. The screenshots in the App Store and feature
listings don't lead me to believe that it's anything significantly
different from the others. I'd be glad to hear from fans, though.&lt;/p&gt;
&lt;p&gt;So, what do you use? Have I missed anything great?&lt;/p&gt;</description><category>apps</category><category>irc</category><category>mac</category><category>review</category><guid>http://michael-mccracken.net/2012/12/mac-irc-clients.html</guid><pubDate>Thu, 13 Dec 2012 17:03:00 GMT</pubDate></item><item><title>Links: JS, LaTeX, Live drawing and sound.</title><link>http://michael-mccracken.net/2012/03/links-js-latex-live-drawing-and-sound.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for March 5th through March 17th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://codemirror.net/"&gt;CodeMirror&lt;/a&gt; - "CodeMirror is a JavaScript library that can be used to create a relatively pleasant editor interface for code-like content â€• computer programs, HTML markup, and similar. If a mode has been written for the language you are editing, the code will be coloured, and the editor will optionally help you with indentation."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://tacosw.com/latexian/"&gt;Latexian: A LaTeX Editor for Mac OS X&lt;/a&gt; - Nice looking latex editor with live preview.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10.6 or higher so I can't try it just now.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=JupqhcT4ONY"&gt;Core Graphics live - YouTube&lt;/a&gt; - Demo of live-preview graphics drawing tool&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://drc-fir.sourceforge.net/"&gt;DRC: Digital Room Correction&lt;/a&gt; - "RC is a program used to generate correction filters for acoustic compensation of HiFi and audio systems in general, including listening room compensation. DRC generates just the FIR correction filters, which can be used with a real time or offline convolver to provide real time or offline correction. DRC doesn't provide convolution features, and provides only some simplified, although really accurate, measuring tools."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/shoaibkamil/asp/wiki"&gt;ASP: A SEJITS Implementation for Python * shoaibkamil/asp Wiki * GitHub&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>JIT</category><category>acoustic</category><category>audio</category><category>coregraphics</category><category>drawing</category><category>editor</category><category>home-theater</category><category>javascript</category><category>latex</category><category>links</category><category>mac</category><category>macosx</category><category>pinboard-links</category><category>programming</category><category>python</category><category>sejits</category><category>speakers</category><category>syntax-highlighting</category><guid>http://michael-mccracken.net/2012/03/links-js-latex-live-drawing-and-sound.html</guid><pubDate>Mon, 19 Mar 2012 21:29:00 GMT</pubDate></item><item><title>Links for August 23rd through September 1st</title><link>http://michael-mccracken.net/2011/09/links-for-august-23rd-through-september-1st.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for August 23rd through September 1st:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.complang.org/ragel/"&gt;Ragel State Machine Compiler&lt;/a&gt; - DSL for state machines in many languages&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://thekidshouldseethis.com/"&gt;The Kid Should See This.&lt;/a&gt; - Stuff on the nets that kids can get into that isn't dumb&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.zulkey.com/2011/08/a_footwearrelated_rant.php"&gt;Zulkey.com&lt;/a&gt; - "They don't necessarily act like they're thinking, "get a load of my rad sock-shoes," but you can tell that there's something slightly suspicious going in their mind."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.sfmoma.org/exhib_events/exhibitions/434"&gt;SFMOMA | Exhibitions + Events | Calendar | Less and More: The Design Ethos of Dieter Rams&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.haystacksoftware.com/arq/index.php"&gt;Online Backup for Mac | Arq | Haystack Software&lt;/a&gt; - Backs up to S3 - selling point is it's careful with file metadataâ€¦&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>amazons3</category><category>art</category><category>backup</category><category>braun</category><category>cloud</category><category>design</category><category>education</category><category>entertainment</category><category>fashion</category><category>kids</category><category>links</category><category>mac</category><category>parsing</category><category>pinboard-links</category><category>programming</category><category>ragel</category><category>rams</category><category>shoes</category><category>state-machines</category><category>video</category><guid>http://michael-mccracken.net/2011/09/links-for-august-23rd-through-september-1st.html</guid><pubDate>Thu, 08 Sep 2011 17:59:00 GMT</pubDate></item><item><title>MacOS X is an Unsuitable Platform for Web Development</title><link>http://michael-mccracken.net/2011/03/macos-x-is-an-unsuitable-platform-for-web-development.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;From Ted Dziuba:Â &lt;a href="http://teddziuba.com/2011/03/osx-unsuitable-web-development.html"&gt;MacOS X is an Unsuitable Platform for Web Development&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h4&gt;Textmate sucks&lt;/h4&gt;
&lt;p&gt;Sooner or later, you have to face facts. Man up and learn Emacs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ted's probably the funniest person blogging about tech that I'm aware of.&lt;/p&gt;
&lt;p&gt;Take note of the filename of the image he used for this postâ€¦&lt;/p&gt;
&lt;p&gt;He just seems angry toward the end, but I'd say his technical points are awfully valid.&lt;/p&gt;
&lt;p&gt;On the other hand, nothing's stopping anyone from using a Mac &lt;em&gt;and&lt;/em&gt; developing on Linux - just use emacs over X11, and keep your great Mac apps for mail, chat, web browsing, etcâ€¦ Honestly I never understood the need to have things work on your laptop if you're actually going to run it on some other server. Isn't that what networks are for?&lt;/p&gt;</description><category>humor</category><category>mac</category><category>webdev</category><guid>http://michael-mccracken.net/2011/03/macos-x-is-an-unsuitable-platform-for-web-development.html</guid><pubDate>Mon, 28 Mar 2011 18:44:00 GMT</pubDate></item><item><title>Software aging well vs. UI that triggers OCD</title><link>http://michael-mccracken.net/2010/05/software-aging-well-vs-ui-that-triggers-ocd.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;I had an idea the other day that I shared on Twitter:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@mikemccracken: It would be cool if there was a way for well-used &amp;amp; loved GUI software to gracefully show its age, like a good leather walletâ€¦&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I still like this idea, and I loved the example that &lt;a href="https://twitter.com/skabaru"&gt;Bryan Knight&lt;/a&gt; replied with - the OS 8 Color Picker crayons, seen in the third "Colour Selector" image on the &lt;a href="http://guidebookgallery.org/screenshots/macos80"&gt;OS 8 GUIdebook page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, it just occurred to me that it'd be hard to design a UI that shows its age or use gracefully without looking "dirty" and triggering the kind of OCD that makes some of us empty the trash just because the icon looks full. I can think of a few other things that do that to me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Of course, the full trash can&lt;/li&gt;
&lt;li&gt;Unread counts of all kinds&lt;/li&gt;
&lt;li&gt;MS Word 08 showing "[Compatibility Mode]" in the window title for files that aren't .docx format&lt;/li&gt;
&lt;li&gt;Badges on files in the finder that show source control status - I tried this once and it drove me crazy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are probably more. Share yours in the comments if you like. I'd also be really interested in other examples besides the crayons where UI changes gracefully as you use the software moreâ€¦&lt;/p&gt;</description><category>design</category><category>mac</category><category>ui</category><guid>http://michael-mccracken.net/2010/05/software-aging-well-vs-ui-that-triggers-ocd.html</guid><pubDate>Tue, 25 May 2010 17:30:00 GMT</pubDate></item><item><title>Getting notes to work with LaTeX Beamer and Skim</title><link>http://michael-mccracken.net/2010/04/getting-notes-to-work-with-latex-beamer-and-skim.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;I'm writing a presentation with &lt;a href="http://bitbucket.org/rivanvx/beamer/wiki/Home"&gt;Beamer&lt;/a&gt;, a LaTeX class for making PDF slides.&lt;/p&gt;
&lt;p&gt;There's a built-in way to generate "notes", which was geared towards Acrobat Reader - it basically makes a double-wide PDF page and Reader will show the 'notes' page on the second screen. (I'm guessing it assumes your laptop screen is arranged on the right of your presentation screen, it's the same size or bigger, etc...)&lt;/p&gt;
&lt;p&gt;This doesn't work for my personal favorite PDF reader, &lt;a href="http://skim-app.sf.net"&gt;Skim&lt;/a&gt; - but luckily there is a full explanation of how to make it work on the &lt;a href="http://sourceforge.net/apps/mediawiki/skim-app/index.php?title=Tips_and_Tricks#Interaction_with_LaTeX_Beamer"&gt;Skim Wiki: Tips and Tricks page&lt;/a&gt;. The short of it is you create three tex files - one with all the content and two wrappers that generate two versions of the same presentation. One version has slides and the other has notes. Then you can set up Skim to auto-scroll the notes PDF as you move through the slides PDF in presentation mode.&lt;/p&gt;
&lt;p&gt;Big thanks to whoever wrote that tip - and to Christiaan for making such a great app.&lt;/p&gt;</description><category>mac</category><guid>http://michael-mccracken.net/2010/04/getting-notes-to-work-with-latex-beamer-and-skim.html</guid><pubDate>Fri, 30 Apr 2010 16:34:00 GMT</pubDate></item><item><title>Snakes on Demand: How to write a Python Launchd Agent</title><link>http://michael-mccracken.net/2010/03/snakes-on-demand-how-to-write-a-python-launchd-agent.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;Suppose you want to write a Launchd agent in Python that communicates using UNIX domain sockets. There's no sample code for that, but the information is out there to figure out how (especially because the &lt;a href="http://launchd.macosforge.net"&gt;launchd source code&lt;/a&gt; is available). Most search results will tell you that you need to read the &lt;a href="http://developer.apple.com/mac/library/technotes/tn2005/tn2083.html"&gt;Daemons and Agents Tech Report TN2083&lt;/a&gt;, but it's pretty long and not a great tutorial. A better intro reference is Chris Hanson's blog post &lt;a href="http://chanson.livejournal.com/179229.html"&gt;"Launchd: better than sliced bread!"&lt;/a&gt;, but that doesn't tell you everything, and doesn't mention Python.&lt;/p&gt;
&lt;p&gt;I decided I'd share what I've learned recently to make getting started a little easier. I'll give a short description here and post the resulting code to bitbucket at &lt;a href="http://bitbucket.org/mikemccracken/py-launchd/"&gt;py-launchd&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; This was written and tested on OS X 10.5.8 with the default &lt;code&gt;/usr/bin/python&lt;/code&gt;, version 2.5.1. 
Since I wanted to use multiprocessing, I used the backport to 2.5 available at &lt;a href="http://code.google.com/p/python-multiprocessing/"&gt;google code: python-multiprocessing&lt;/a&gt; . For convenience, it's included in the repository, and so is its license.&lt;/p&gt;
&lt;h4&gt;Goal&lt;/h4&gt;
&lt;p&gt;What we're trying to do is have some python code that gets called when launchd notices someone connecting to a &lt;a href="http://en.wikipedia.org/wiki/Unix_domain_socket"&gt;UNIX domain socket&lt;/a&gt;. UNIX domain sockets are local-only, so this is ideal for agents that only serve local apps. We're also using launchd "agents" not "daemons", so we're assuming that it's OK to have one agent process for each user. If you're managing access to something that needs to be unique system-wide, then this won't work (but you can still use Launchd).&lt;/p&gt;
&lt;h4&gt;launchd overview&lt;/h4&gt;
&lt;p&gt;The launchd process will read a launchd plist you give it (at login, via launchctl or the 10.6 framework), and listen on the socket you tell it to. Once it sees a connection, it'll start the agent program you specified in the plist, and that program can make some calls using the launchd C API to get a file descriptor for the socket that was connected. This is important - you don't need to call bind() or listen() on the socket, because launchd already did. It's just handing the open socket's file descriptor straight to you and your code can just call accept() on it.&lt;/p&gt;
&lt;h4&gt;Using launchd with Python&lt;/h4&gt;
&lt;p&gt;You need to create a C/ObjC tool that can do the launchd check-in to get the open file descriptor, then pass that off to your Python code. This is pretty straightforward using the Python framework included in OS X and the Python C APIs.&lt;/p&gt;
&lt;p&gt;What I've done is create an agent loader that I called PyLaunchd that loads and runs server code in Agent.py. It expects Agent.py to be in the same directory.&lt;/p&gt;
&lt;p&gt;PyLaunchd is built separately and copied into the test app's Resources folder with an XCode script phase.&lt;/p&gt;
&lt;p&gt;I have the app delegate copy &lt;code&gt;PyLaunchd&lt;/code&gt; and &lt;code&gt;Agent.py&lt;/code&gt; to &lt;code&gt;~/Library/Application Support/PyLaunchd/&lt;/code&gt; on loading.
It also customizes the launchd plist to set the path correctly for the current user, then writes that to &lt;code&gt;~/Library/LaunchAgents/&lt;/code&gt;, and loads it. (Actually it first unloads it, then reloads it. I'm not convinced this is the right way to do it). It uses system() to call launchctl, but I believe in OS X 10.6 there's an API you can call to do it directly.&lt;/p&gt;
&lt;p&gt;Finally, the sample app is really simple - it just opens the socket using the multiprocessing Client class, and sends whatever you type. The example Agent I've included will ROT13 it and send it back.&lt;/p&gt;
&lt;p&gt;Please let me know if you have any comments, questions, or improvements.&lt;/p&gt;</description><category>launchd</category><category>mac</category><category>macdev</category><category>multiprocessing</category><category>programming</category><category>python</category><guid>http://michael-mccracken.net/2010/03/snakes-on-demand-how-to-write-a-python-launchd-agent.html</guid><pubDate>Mon, 15 Mar 2010 04:23:00 GMT</pubDate></item><item><title>App History</title><link>http://michael-mccracken.net/2009/11/app-history.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;I just saw Brent's post from a couple weeks ago about an &lt;a href="http://inessential.com/2009/11/08/apphistory_app_idea"&gt;App History App&lt;/a&gt; - I think that'd be really cool. I especially like the screen shot idea, since I love seeing posts from a developer showing what an app looked like along the progression. It's too easy to forget to document that kind of thing, and I'd love it if we saw more of these behind-the-scenes posts.&lt;/p&gt;</description><category>mac</category><category>programming</category><guid>http://michael-mccracken.net/2009/11/app-history.html</guid><pubDate>Wed, 25 Nov 2009 21:02:00 GMT</pubDate></item><item><title>Measuring PDFs with Skim</title><link>http://michael-mccracken.net/2009/11/measuring-pdfs-with-skim.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;&lt;img alt="Skim Measurement" src="http://michael-mccracken.net/wp2/wp-content/uploads/2009/11/skimsnap.png"&gt;&lt;/p&gt;
&lt;p&gt;I love it when I can guess how to do something new in a program.
&lt;a href="http://skim-app.sf.net"&gt;Skim&lt;/a&gt; just did this for me - I needed to figure out how big the rectangle of text in a paper I'm working on is, in inches. I looked for rulers, and then decided I'd just see if I get any size feedback when I make a rectangular selection. Turns out there's a nice feedback status line in the bottom right - clicking toggles between measurement in pts and in inches. &lt;/p&gt;
&lt;p&gt;I like how this solves my problem without adding a lot of new UI for measurement - no rulers, no extra tool to measure length. &lt;/p&gt;</description><category>design</category><category>mac</category><category>skim</category><category>ui</category><guid>http://michael-mccracken.net/2009/11/measuring-pdfs-with-skim.html</guid><pubDate>Sat, 07 Nov 2009 01:00:00 GMT</pubDate></item><item><title>I'd like to see a community-run version...</title><link>http://michael-mccracken.net/2009/10/id-like-to-see-a-community-run-version.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;I'd like to see a community-run version of the Apple Design Awards.&lt;/p&gt;
&lt;p&gt;Anyone could nominate an app, and the developer community would vote on who wins, in just a few categories.&lt;/p&gt;
&lt;p&gt;I'm thinking the categories could be a little more user-centric than Apple's. For instance, I don't really care about best adoption of OS X technologies, but something like "best refinement of a common task" or "best default behavior" or "best scriptability" would be interesting, and something that'd be easier to use as a marketing badge...&lt;/p&gt;
&lt;p&gt;This is just off the top of my head, so there are probably others. "Least data lock-in"? "Easiest to learn?", "Best plugin community"?&lt;/p&gt;</description><category>apps</category><category>awards</category><category>community</category><category>mac</category><guid>http://michael-mccracken.net/2009/10/id-like-to-see-a-community-run-version.html</guid><pubDate>Mon, 26 Oct 2009 19:08:00 GMT</pubDate></item></channel></rss>