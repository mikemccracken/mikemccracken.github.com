<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>michael-mccracken.net (analysis)</title><link>http://michael-mccracken.net/</link><description></description><atom:link rel="self" href="http://michael-mccracken.net/categories/analysis.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 13 Nov 2015 19:12:29 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Links for June 27, 2014</title><link>http://michael-mccracken.net/2014/06/links-for-June-27-2014/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://opentuner.org/"&gt;OpenTuner by jansel&lt;/a&gt;
    "OpenTuner is a new framework for building domain-specific multi-objective program autotuners. OpenTuner supports fully customizable configuration representations, an extensible technique representation to allow for domain-specific techniques, and an easy to use interface for communicating with the tuned program. A key capability inside OpenTuner is the use of ensembles of disparate search techniques simultaneously, techniques which perform well will receive larger testing budgets and techniques which perform poorly will be disabled." -- This looks really useful. I started on something like this long ago at LLNL, but since I was so young I focused mostly on fancy plots and designing a language for describing experiments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://vimeo.com/95534178"&gt;Paper to Plants on Vimeo&lt;/a&gt;
    A really cute video about a game that seems pretty charming. I'm still not sold on little kids using iPads so much, I'm told it's bad for their eye development.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.computingcomfort.org/create2.asp"&gt;Ergonomic Workspace Planner Tool | ComputingComfort.org&lt;/a&gt;
    Use this to figure out the optimal height of your standing desk&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://mbutterick.github.io/pollen/doc/"&gt;pollen&lt;/a&gt;
    Write web based books in racket&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://dealloc.me/2014/05/24/opendata-house-hunting/"&gt;Finding the perfect house using open data — dealloc.me&lt;/a&gt;
    A guy builds a map of available houses in Portland that match his desires. Seems like a good real estate agent should do this for you - but how do you know you've got a good one? I guess you have to write some code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://billmill.org/pymag-trees/"&gt;Drawing Presentable Trees&lt;/a&gt;
    "When I needed to draw some trees for a project I was doing, I assumed that there would be a classic, easy algorithm for drawing neat trees. What I found instead was much more interesting: not only is tree layout an NP-complete problem1, but there is a long and interesting history behind tree-drawing algorithms. I will use the history of tree drawing algorithms to introduce central concepts one at a time, using each of them to build up to a complete O(n) algorithm for drawing attractive diagrams of trees." -- I've always wondered what a good way to do this would be. Knew it had to be a solved problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://againstallgrain.com/2013/10/12/grain-free-oatmeal-raisin-cookies/"&gt;Grain-Free Oatmeal Raisin Cookies | Against All Grain - Delectable paleo recipes to eat &amp;amp; feel great&lt;/a&gt;
    If you want oatmeal-raisin but you're trying to avoid oats and sugar, these are really quite good. The coconut makes a great texture.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.slate.com/articles/life/family/2014/06/lev_grossman_on_his_daughter_lily_how_being_a_father_ruined_my_life_and.html"&gt;Lev Grossman on his daughter, Lily: How being a father ruined my life and made me a better writer.&lt;/a&gt;
    A really heartfelt story about becoming a dad and getting your act together. Now that I have kids I'm a total sucker for this kind of article.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://hal.archives-ouvertes.fr/inria-00555588/"&gt;HAL :: [inria-00555588, version 1] A comprehensive study of Convergent and Commutative Replicated Data Types&lt;/a&gt;
    Formal exploration of sync-able data types. Abstract: "Eventual consistency aims to ensure that replicas of some mutable shared object converge without foreground synchronisation. Previous approaches to eventual consistency are ad-hoc and error-prone. We study a principled approach: to base the design of shared data types on some simple formal conditions that are sufficient to guarantee eventual consistency. We call these types Convergent or Commutative Replicated Data Types (CRDTs). This paper formalises asynchronous object replication, either state based or operation based, and provides a sufficient condition appropriate for each case. It describes several useful CRDTs, including container data types supporting both \add and \remove operations with clean semantics, and more complex types such as graphs, montonic DAGs, and sequences. It discusses some properties needed to implement non-trivial CRDTs."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://dev.stephendiehl.com/hask/#intro"&gt;What I Wish I Knew When Learning Haskell 2.1 ( Stephen Diehl )&lt;/a&gt;
    Nice quick article with practical tips for beginners.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.psmag.com/navigation/business-economics/talent-migration-work-creative-much-new-york-poor-pittsburgh-rich-82894/"&gt;Not So Much 'New York Poor' as 'Pittsburgh Rich' - Pacific Standard: The Science of Society&lt;/a&gt;
    You can get a lot for your money in Pittsburgh, and lots of other places throughout the US. I'm from Pgh, and have fond memories. I'd consider moving back there if they could fix the weather.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://aphyr.com/posts/317-call-me-maybe-elasticsearch"&gt;Call me maybe: Elasticsearch&lt;/a&gt;
    Part of a series of irreverent but thorough explorations of various popular distributed systems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://m.theatlantic.com/technology/archive/2014/05/what-do-we-save-when-we-save-the-internet/370885/"&gt;What Do We Save When We Save the Internet&lt;/a&gt;
    So as you proceed with your protests, I wonder if you might also ask, quietly, to yourself even, what new growth might erupt if we let the Internet as we know it burn. Shouldn't we at least ponder the question? Perhaps we’d be better off tolerating the venial regret of having lost something than suffering the mortal regret of enduring it."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.musanim.com/"&gt;Music Animation Machine — "Music Worth Watching"&lt;/a&gt;
    Old stuff, but great. Couldn't believe I hadn't bookmarked it long ago.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://serialized.net/2013/03/moving-from-octopress-to-nikola/"&gt;Moving from Octopress to Nikola | serialized.net&lt;/a&gt;
    This post and a few tweaks got me into nikola without much hassle.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>acheme</category><category>algorithms</category><category>analysis</category><category>app</category><category>art</category><category>autotuning</category><category>blogging</category><category>calculator</category><category>constraints</category><category>cookie</category><category>CRDT</category><category>criticism</category><category>culture</category><category>data</category><category>data-structures</category><category>diagram</category><category>ergonomics</category><category>estate</category><category>eventual-consistency</category><category>fatherhood</category><category>finance</category><category>gluten-free</category><category>graphics</category><category>growing</category><category>haskell</category><category>housing</category><category>howto</category><category>internet</category><category>kids</category><category>language</category><category>maps</category><category>merging</category><category>music</category><category>nikola</category><category>oatmeal</category><category>octopress</category><category>optimization</category><category>paleo</category><category>parenting</category><category>performance</category><category>pittsburgh</category><category>plants</category><category>programming</category><category>publishing</category><category>quickref</category><category>racket</category><category>real</category><category>recipe</category><category>reference</category><category>research</category><category>solver</category><category>sync</category><category>tree</category><category>tuning</category><category>typesetting</category><category>up</category><category>video</category><category>visualization</category><category>workstation</category><category>writing</category><guid>http://michael-mccracken.net/2014/06/links-for-June-27-2014/</guid><pubDate>Fri, 27 Jun 2014 19:24:00 GMT</pubDate></item><item><title>Links for December 28th - 29th (Including PyCon2012 Talks of Interest)</title><link>http://michael-mccracken.net/2012/01/links-for-december-28th-29th-including-pycon2012-talks-of-interest/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;My shared links for December 28th through December 29th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://mail.python.org/pipermail/email-sig/"&gt;The Email-SIG Archives&lt;/a&gt; - Archives of group working on email package in python&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.abisource.com/projects/link-grammar/"&gt;Link Grammar&lt;/a&gt; - grammar parsing package homepage as part of abiword&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://networkx.lanl.gov/"&gt;Overview -- NetworkX 1.6 documentation&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://dmalcolm.livejournal.com/6560.html"&gt;dmalcolm - Automatically detecting reference-count bugs in Python extension modules&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://us.pycon.org/2012/schedule/presentation/468/"&gt;PyCon US 2012: Parsing Horrible Things&lt;/a&gt; - If you've ever wanted to get started with parsers, here's your chance for a ground-floor introduction. A harebrained spare-time project gives birth to a whirlwind journey from basic algorithms to Python libraries and, at last, to a parser for one of the craziest syntaxes out there: the MediaWiki grammar that drives Wikipedia.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://us.pycon.org/2012/schedule/presentation/426/"&gt;PyCon US 2012: Python for data lovers&lt;/a&gt; - Exploring and analyzing data can be daunting and time-consuming, even for data lovers. Python can make the process fun and exciting. We will present techniques of data analysis, along with python tools that help you explore and map data. Our talk includes examples that show how python libraries such as csvkit, matplotlib, scipy, networkx and pysal can help you dig into and make sense of your data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://us.pycon.org/2012/schedule/presentation/407/"&gt;PyCon US 2012: Time series analysis in python&lt;/a&gt; - Analyzing, storing and visualizing time-series efficiently are recurring though difficult tasks in various aspects of scientific data analysis such as meteorological forecasting, financial modeling, ... In this talk we will explore the current Python ecosystem for doing this effectively, comparing options, using only open source packages that are mature yet still under active development.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://us.pycon.org/2012/schedule/presentation/378/"&gt;PyCon US 2012: Email package&lt;/a&gt; - The email package in the Python Standard library has had a somewhat rocky transition into the Python3 era, and still doesn't handle non-ASCII easily. That is about to change. This talk will compare how things worked in Python2 (the past), how things work now (in Python3.2), and how things will work much better in the future (hopefully Python3.3).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://us.pycon.org/2012/schedule/presentation/341/"&gt;PyCon US 2012: Advanced SQLAlchemy&lt;/a&gt; - How do you take the big step from casual SQLAlchemy user, who treats your database as a mysterious object store, to advanced power user, who optimizes critical queries, plans indexing and migrations, and generates efficient reports? This talk will teach you how databases think; why humanity invented the Relational Algebra; and how SQLAlchemy grants you access to relational power.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://us.pycon.org/2012/schedule/presentation/304/"&gt;PyCon US 2012 : Python FUSE&lt;/a&gt; - Contrary to classical kernel residing file-systems in *NIX, FUSE is an API to develop file systems in user space. This talk details internals of FUSE, developing your own file-system with Python-FUSE, followed by creative application of Python-FUSE based file system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://us.pycon.org/2012/schedule/presentation/303/"&gt;PyCon US 2012: What's new in the PyStdLib&lt;/a&gt; - Lots of Interesting stuff has gone into Python Standard library in 2.7, 3.1, 3.2 and 3.3 release. Some interesting features that went in really make programmers life easy and it can bring in a 'wow' factor to their code. Additionally, it can also help the external library developers to relook at the their libraries to use new facilities available from standard library modules.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk distills stuff from What's new document from 2.7, 3.2 and 3.3 and presents some of the choicest new features from Python standard library. Since a lots has gone in since 2.7, focus would be given to those which have had good discussion in tracker or in python-dev and would in general was a most sought out one.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://us.pycon.org/2012/schedule/presentation/246/"&gt;PyCon US 2012: Code Generation in Python: Dismantling Jinja&lt;/a&gt; - For many DSLs such as templating languages it's important to use code generation to achieve acceptable performance in Python. The current version of Jinja went through many different iterations to end up where it is currently. This talk walks through the design of Jinja2's compiler infrastructure and why it works the way it works and how one can use newer Python features for better results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://us.pycon.org/2012/schedule/presentation/196/"&gt;Mailman 3 -- PyCon US 2012&lt;/a&gt; - Mailman 3 has been in development for several years. This is an evolution of the ever popular mailing list management system that runs thousands of mailing lists around the world. This talk describes how the code has been modernized and how the architectural deficiencies of Mailman 2 have been addressed using REST and other technologies. This is a spinoff from the AOSA chapter on Mailman 3.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://wiki.opencog.org/w/RelEx"&gt;RelEx Dependency Relationship Extractor - OpenCog&lt;/a&gt; - RelEx, a narrow-AI component of OpenCog, is an English-language semantic dependency relationship extractor, built on the Carnegie-Mellon Link Grammar parser. It uses a series of graph rewriting rules to identify subject, object, indirect object and many other syntactic dependency relationships between words in a sentence. That is, it generates the dependency trees of a dependency grammar. Its set of dependency relations it employs resemble those of Dekang Lin's MiniPar and the Stanford parser (and it has an explicit compatibility mode). It is inspired in part by the ideas of Hudson's Word Grammar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://notes.pinboard.in/u%3Ammc/236478884c5e2422513d"&gt;Could you start a blog on this thing?&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://vr-zone.com/articles/chinese-high-end-cpus-are-now-in-the-game--details--part-2-alpha/14347.html"&gt;Chinese high end CPUs are now in the game - details: Part 2, Alpha by VR-Zone.com&lt;/a&gt; - Chinese supercomputer uses Alpha architecture. Article has some interesting details and some cringeworthy breathless praise for the lamented Alpha chips…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>AI</category><category>alpha</category><category>analysis</category><category>blog</category><category>china</category><category>code</category><category>code-generation</category><category>computer-architecture</category><category>data</category><category>database</category><category>DSL</category><category>email</category><category>filesystem</category><category>FUSE</category><category>gcc</category><category>graph</category><category>graph-processing</category><category>jinja</category><category>linkgrammar</category><category>links</category><category>mailman</category><category>matplotlib</category><category>network</category><category>nlp</category><category>opencog</category><category>parsing</category><category>pinboard-links</category><category>pycon2012</category><category>python</category><category>python3</category><category>REST</category><category>science</category><category>sqlalchemy</category><category>static-analysis</category><category>sunway</category><category>talk</category><category>templating</category><category>text</category><category>time-series</category><category>visualization</category><guid>http://michael-mccracken.net/2012/01/links-for-december-28th-29th-including-pycon2012-talks-of-interest/</guid><pubDate>Tue, 03 Jan 2012 19:21:00 GMT</pubDate></item></channel></rss>