<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>michael-mccracken.net (python)</title><link>http://michael-mccracken.net/</link><description></description><language>en</language><lastBuildDate>Tue, 17 Mar 2015 08:30:07 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Links: Simulation, Programming, Crab Cakes and Hockey Player Usage Charts</title><link>http://michael-mccracken.net/2013/04/links/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;li&gt;&lt;a href="http://lambda-the-ultimate.org/node/4710"&gt;DYNAMO&lt;/a&gt;
    Someone has rewritten one of the earliest simulation systems in JavaScript (the fate of all interesting software). Also includes a link to an article about the history of simulation software that sounds very interesting.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.seriouseats.com/~r/seriouseatsfeaturesvideos/~3/yfScRT6TNzw/the-food-lab-crab-cakes.html"&gt;The Food Lab: The Crabbiest Crab Cakes&lt;/a&gt;
    I love crab cakes, but I'm not sure I really want to try to make them at home. If I do, I'll use these tips. The Food Lab is fun stuff.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mjtsai.com/blog/2013/03/30/debug-it/"&gt;Debug It!&lt;/a&gt;
    A review of a book on debugging, which is a topic that I think should be taught right alongside programming. See also &lt;a href="http://whyprogramsfail.com"&gt;"Why Programs Fail"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.givedirectly.org/"&gt;GiveDirectly: introducing a radical new way to give! | GiveDirectly&lt;/a&gt;
    Send cash straight to poor people. If their assertions are true, it's a really interesting idea, and I can't believe it hasn't been done before. It also seems transparently better than microloans.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ContinuumIO/Bokeh"&gt;ContinuumIO/Bokeh · GitHub&lt;/a&gt;
    Something to look out for -- a Python ggplot that works with HTML5 is a great idea. "Bokeh (pronounced boh-Kay) is an implementation of Grammar of Graphics for Python, that also supports the customized rendering flexibility of Protovis and d3. Although it is a Python library, its primary output backend is HTML5 Canvas.  There are many excellent plotting packages for Python, but they generally do not optimize for the particular needs of statistical plotting (easy faceting, bulk application of aesthetic and visual parameters across categorical variables, pleasing default color palettes for categorical data, etc.). The goal of Bokeh is to provide a compelling Python equivalent of ggplot in R."&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kk.org/cooltools/archives/10441"&gt;FitDesk X1&lt;/a&gt;
    Level up from a standing desk? I'd love to try this for a day.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lambda-the-ultimate.org/node/4699"&gt;Concurrent Revisions&lt;/a&gt;
    DVCS-like concurrent programming. Interesting sounding research - I haven't read it yet...&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hockeyabstract.com/playerusagecharts"&gt;Many thanks to @robvollmannhl and the good folks at Hockey Abstract for these great interactive Player Usage Charts: hockeyabstract.com/playerusagecha…&lt;/a&gt;
    Player Usage Charts are fascinating, but I can never figure out why people always change the axes so that the dots fill the space. It makes it impossible to compare two charts, and it's not obvious, so you end up comparing charts without realizing that it's meaningless.&lt;/li&gt;
</description><category>Debugging</category><category>Recipe books</category><category>charity</category><category>crab-cake</category><category>data-analysis</category><category>giving</category><category>plotting</category><category>programming</category><category>python</category><category>recipe</category><category>research</category><guid>http://michael-mccracken.net/2013/04/links/</guid><pubDate>Wed, 10 Apr 2013 15:41:00 GMT</pubDate></item><item><title>Links: Hacking, Music in Python, Rust &amp; unitasking</title><link>http://michael-mccracken.net/2012/04/links-hacking-music-in-python-rust-unitaskimg/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for April 5th through April 6th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://lemire.me/blog/archives/2011/06/06/why-i-still-program/"&gt;Why I still program&lt;/a&gt; - "I believe that the rejection of programming as a lower activity can be explained by the Theory of the leisure class. In effect, we do not seek utility but prestige. There is no prestige in tool-making, cooking or farming. To maximize your prestige, you must rise up to the leisure class: you work must not be immediately useful."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://lemire.me/blog/archives/2012/03/20/from-counting-citations-to-measuring-usage-help-needed/"&gt;From counting citations to measuring usage (help needed!)&lt;/a&gt; - Building a Better Citation Index&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://mailplaneapp.com/blog/entry/workhacks.com_top_3_gmail_management_apps_for_mac"&gt;workhacks.com: Top 3 Gmail Management Apps for Mac - Mailplane Blog&lt;/a&gt; - includes a list of gmail plugins that look useful&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://prezjordan.github.com/Melopy/"&gt;Melopy&lt;/a&gt; - 
&lt;code&gt;  &lt;br&gt;
    """
    &amp;gt;&amp;gt;&amp;gt; from melopy import Melopy
    &amp;gt;&amp;gt;&amp;gt; m = Melopy('mysong')
    &amp;gt;&amp;gt;&amp;gt; m.add_quarter_note('A4')
    &amp;gt;&amp;gt;&amp;gt; m.add_quarter_note('C#5')
    &amp;gt;&amp;gt;&amp;gt; m.add_quarter_note('E5')
    &amp;gt;&amp;gt;&amp;gt; m.render()
    [==================================================] 100%
    Done
    """
&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://doc.rust-lang.org/doc/tutorial.html#expression-syntax"&gt;Rust Language Tutorial: Expression Syntax&lt;/a&gt; - Starts out good, but the "leave out a semicolon to return a value" leaves a bad taste. Why overload semicolons like that? Why not just use 'ret'?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.deliberatism.com/blog/forget-self-improvement/"&gt;Forget Self-Improvement&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blogs.hbr.org/schwartz/2012/03/the-magic-of-doing-one-thing-a.html"&gt;The Magic of Doing One Thing at a Time - Tony Schwartz - Harvard Business Review&lt;/a&gt; - A few good points on avoiding multitasking burnout. Nothing too new, but maybe if people keep repeating it in places like HBR, then it'll start to become conventional business wisdom?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>business</category><category>citation</category><category>email</category><category>gmail</category><category>impact</category><category>libraries</category><category>links</category><category>machine-learning</category><category>mikechecksmail</category><category>multitasking</category><category>music</category><category>pinboard-links</category><category>productivity</category><category>programming</category><category>publication</category><category>python</category><category>ranking</category><category>research</category><category>rust</category><guid>http://michael-mccracken.net/2012/04/links-hacking-music-in-python-rust-unitaskimg/</guid><pubDate>Wed, 11 Apr 2012 23:15:00 GMT</pubDate></item><item><title>Links: Flattr, Haskell, Haskell QuickCheck, and Stuart Cheshire (of Bolo fame)</title><link>http://michael-mccracken.net/2012/04/links-flattr-haskell-haskell-quickcheck-and-stuart-cheshire-of-bolo-fame/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for April 4th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.stuartcheshire.org/rants/Networkdynamics.html"&gt;Stuart's "Law of Networkdynamics"&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://flattr.com/"&gt;Flattr - Social micropayments&lt;/a&gt; - An interesting model that I hadn't heard of. You set a monthly amount to spend and when you see a flattr button, you click on it. They then divide your monthly amount among the people you clicked on that month.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sounds great but I have never seen a button, unless it's been hidden among many other warts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://bos.github.com/strange-loop-2011/slides/slides.html#(1)"&gt;Haskell: Functional Programming, Solid Code, Big Data (1)&lt;/a&gt; - Bryan O'Sullivan's Haskell tutorial from Strange Loop 2011&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.yellosoft.us/quickcheck"&gt;QuickCheck | YELLOSOFT&lt;/a&gt; - Lots of ports of QuickCheck&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://dan.bravender.us/2009/6/21/Simple_Quickcheck_implementation_for_Python.html"&gt;Simple Quickcheck implementation for Python&lt;/a&gt; - Random test generation that is not as nice as Haskell's quickcheck but will do the job.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>cite:wmf</category><category>crowdfunding</category><category>haskell</category><category>latency</category><category>links</category><category>money</category><category>pinboard-links</category><category>presentation</category><category>programming</category><category>python</category><category>quickcheck</category><category>social</category><category>support</category><category>testing</category><category>tutorial</category><guid>http://michael-mccracken.net/2012/04/links-flattr-haskell-haskell-quickcheck-and-stuart-cheshire-of-bolo-fame/</guid><pubDate>Fri, 06 Apr 2012 23:20:00 GMT</pubDate></item><item><title>Links for mid-March see scalable python around corners. And Future Spies on Facebook!</title><link>http://michael-mccracken.net/2012/03/links-for-mid-march-see-scalable-python-around-corners-and-future-spies-on-facebook/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for March 18th through March 26th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://highscalability.com/blog/2012/3/26/7-years-of-youtube-scalability-lessons-in-30-minutes.html"&gt;7 Years of YouTube Scalability Lessons in 30 Minutes&lt;/a&gt; - Notes from a PyCon talk about the very pragmatic design philosophy at YouTube.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/bkad/discoball"&gt;bkad/discoball * GitHub&lt;/a&gt; - shell tool to match and colorize lines of text&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pragprog.com/book/kcdc/the-developer-s-code"&gt;The Pragmatic Bookshelf | The Developer's Code&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.nature.com/news/how-to-see-around-corners-1.10258"&gt;How to see around corners : Nature News &amp;amp; Comment&lt;/a&gt; - And we thought the future was flying cars.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.theregister.co.uk/2012/03/19/cia_internet_of_things/page2.html"&gt;ARM's ultra-low-power fridge-puter chips: Just what the CIA ordered • The Register&lt;/a&gt; - Out of context interesting quote: "The spy boss was chiefly concerned with the huge amounts of data that can be collected from American citizens who intend to become CIA agents - in an age when parents set up Twitter and Tumblr accounts for their newborns, managing the identities of future operatives suddenly becomes non-trivial."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://reprog.wordpress.com/2012/02/27/who-needs-access-you-need-access/"&gt;Who needs access? You need access!&lt;/a&gt; - new site about open access to research aimed at lay people (I think)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>ARM</category><category>CIA</category><category>architecture</category><category>colorize</category><category>future</category><category>imaging</category><category>internet-of-things</category><category>laser</category><category>links</category><category>logging</category><category>openaccess</category><category>philosophy</category><category>pinboard-links</category><category>programming</category><category>python</category><category>research</category><category>scalability</category><category>shell</category><category>spies</category><category>spycam</category><category>wisdom</category><guid>http://michael-mccracken.net/2012/03/links-for-mid-march-see-scalable-python-around-corners-and-future-spies-on-facebook/</guid><pubDate>Fri, 30 Mar 2012 19:20:00 GMT</pubDate></item><item><title>Links: JS, LaTeX, Live drawing and sound.</title><link>http://michael-mccracken.net/2012/03/links-js-latex-live-drawing-and-sound/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for March 5th through March 17th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://codemirror.net/"&gt;CodeMirror&lt;/a&gt; - "CodeMirror is a JavaScript library that can be used to create a relatively pleasant editor interface for code-like content ― computer programs, HTML markup, and similar. If a mode has been written for the language you are editing, the code will be coloured, and the editor will optionally help you with indentation."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://tacosw.com/latexian/"&gt;Latexian: A LaTeX Editor for Mac OS X&lt;/a&gt; - Nice looking latex editor with live preview.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10.6 or higher so I can't try it just now.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=JupqhcT4ONY"&gt;Core Graphics live - YouTube&lt;/a&gt; - Demo of live-preview graphics drawing tool&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://drc-fir.sourceforge.net/"&gt;DRC: Digital Room Correction&lt;/a&gt; - "RC is a program used to generate correction filters for acoustic compensation of HiFi and audio systems in general, including listening room compensation. DRC generates just the FIR correction filters, which can be used with a real time or offline convolver to provide real time or offline correction. DRC doesn't provide convolution features, and provides only some simplified, although really accurate, measuring tools."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/shoaibkamil/asp/wiki"&gt;ASP: A SEJITS Implementation for Python * shoaibkamil/asp Wiki * GitHub&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>JIT</category><category>acoustic</category><category>audio</category><category>coregraphics</category><category>drawing</category><category>editor</category><category>home-theater</category><category>javascript</category><category>latex</category><category>links</category><category>mac</category><category>macosx</category><category>pinboard-links</category><category>programming</category><category>python</category><category>sejits</category><category>speakers</category><category>syntax-highlighting</category><guid>http://michael-mccracken.net/2012/03/links-js-latex-live-drawing-and-sound/</guid><pubDate>Mon, 19 Mar 2012 21:29:00 GMT</pubDate></item><item><title>Links: More PyPy, Academia, Censorship we Love, and Monads</title><link>http://michael-mccracken.net/2012/03/more-pypy-academia-censorship-we-love-and-monads/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for March 1st through March 5th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/8452396/does-pypy-translate-itself/8569919#8569919"&gt;python - Does PyPY translate itself? - Stack Overflow&lt;/a&gt; - An informative answer about how PyPy works&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://lars.com/2011/01/08/on-reviewing-research-papers/"&gt;On reviewing research papers « Lars Bergstrom&lt;/a&gt; - So, PL has a culture of really useful reviews, huh?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.paulgraham.com/love.html"&gt;How to Do What You Love&lt;/a&gt; - "If you think something's supposed to hurt, you're less likely to notice if you're doing it wrong. That about sums up my experience of graduate school."&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Boom!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.themillions.com/2012/03/ban-this-book-an-uncensored-look-at-the-lorax-and-other-dangerous-books.html"&gt;The Millions : Ban This Book: An Uncensored Look At The Lorax And Other Dangerous Books&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.sigfpe.com/2006/08/you-could-have-invented-monads-and.html"&gt;A Neighborhood of Infinity: You Could Have Invented Monads! (And Maybe You Already Have.)&lt;/a&gt; - A practical way of thinking about monads.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>academia</category><category>haskell</category><category>links</category><category>monads</category><category>pg</category><category>pinboard-links</category><category>programming</category><category>publishing</category><category>pypy</category><category>python</category><category>research</category><category>rpy</category><guid>http://michael-mccracken.net/2012/03/more-pypy-academia-censorship-we-love-and-monads/</guid><pubDate>Tue, 06 Mar 2012 19:39:00 GMT</pubDate></item><item><title>Links: Cheap wardrobe, App Stores, Javascript &amp; Parsing.</title><link>http://michael-mccracken.net/2012/03/links-cheap-wardrobe-app-stores-javascript-parsing/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for February 23rd:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://putthison.com/post/17161826063"&gt;Strategic Frugality If you're just starting to build a...&lt;/a&gt; - where you can skimp!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.chuqui.com/2012/02/dealing-with-crap-apps-in-the-catalog/"&gt;Dealing with Crap apps in the catalog…&lt;/a&gt; - chuq on the tough problem of policing app stores.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.jslint.com/"&gt;JSLint,The JavaScript Code Quality Tool&lt;/a&gt; - From Douglas Crockford&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.javascriptlint.com/"&gt;JavaScript Lint&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zaach.github.com/jison/"&gt;Jison&lt;/a&gt; - javascript bison with a yacc-alike too&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://effbot.org/zone/simple-top-down-parsing.htm"&gt;Simple Top-Down Parsing in Python&lt;/a&gt; - Pratt Parsing in Python. (After Douglas Crockford's Javascript version)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;def expression(rbp=0):
    global token
    t = token
    token = next()
    left = t.nud()
    while rbp &amp;lt; token.lbp:
        t = token
        token = next()
        left = t.led(left)
    return left&lt;/p&gt;</description><category>apple</category><category>appstore</category><category>clothes</category><category>dressing</category><category>javascript</category><category>led</category><category>links</category><category>lint</category><category>nud</category><category>parser-generator</category><category>parsing</category><category>pinboard-links</category><category>pratt</category><category>programming</category><category>put-this-on</category><category>python</category><category>ties</category><category>tools</category><category>wardrobe</category><guid>http://michael-mccracken.net/2012/03/links-cheap-wardrobe-app-stores-javascript-parsing/</guid><pubDate>Thu, 01 Mar 2012 20:51:00 GMT</pubDate></item><item><title>Links for February 7th through February 9th</title><link>http://michael-mccracken.net/2012/02/links-for-february-7th-through-february-9th/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for February 7th through February 9th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://twitter.github.com/effectivescala/"&gt;Effective Scala&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://courses.csail.mit.edu/6.851/spring12/lectures"&gt;Video lectures for 6.851, advanced data structures&lt;/a&gt; - Prof. Erik Demaine's 6.851 lectures recorded with synchronized lecture notes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/tobami/codespeed/"&gt;tobami/codespeed - GitHub&lt;/a&gt; - Python and django performance monitoring tool. Used for speed.pypy.org&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://tratt.net/laurie/research/publications/html/tratt__experiences_with_an_icon_like_expression_evaluation_system/"&gt;Experiences with an Icon-like Expression Evaluation System&lt;/a&gt; - Interesting and accessible trip through Icon's expression semantics and Converge.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/amoffat/pbs"&gt;amoffat/pbs - GitHub&lt;/a&gt; - Clever library to let you start subprograms from python as if they were python functions. Much more usable than the stuff I'm used to in the pystdlib...
Almost as concise as backticks and looks more flexible too (ie, handles piping)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://tratt.net/laurie/tech_articles/articles/fast_enough_vms_in_fast_enough_time"&gt;Laurence Tratt: Fast Enough VMs in Fast Enough Time&lt;/a&gt; - "If you can stomach the smell, put yourself briefly in the shoes of a programming language designer. What you want to do is create new programming languages, combining new and old ideas into a fresh whole. It sounds like a fun, intellectually demanding job, and occasionally it is. However, we know from experience that languages that exist solely in the mind or on paper are mostly worthless: it is only when they are implemented and we can try them out that we can evaluate them. As well as a language design, therefore, we need a corresponding language implementation."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.mobiata.com/blog/2012/02/08/twine-string-management-ios-mac-os-x"&gt;Introducing Twine: String Management for iOS, Mac OS X, and Android Development - Mobiata Blog&lt;/a&gt; - In this post I hope to show you just how bad the standard localization process is for iOS and Mac OS X apps, and how we have found a way to make it much easier for developers to localize their apps and then maintain these localizations and translations over time. In addition, I'll show you how you can easily share your translations across multiple apps and platforms. This will save your company money that would otherwise be spent duplicating your translation efforts, especially if you are developing for both iOS and Android.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://live.gnome.org/Conduit"&gt;Conduit - GNOME Live!&lt;/a&gt; - Conduit is a synchronization application for GNOME. It allows you to synchronize your files, photos, emails, contacts, notes, calendar data and any other type of personal information and synchronize that data with another computer, an online service, or even another electronic device.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conduit manages the synchronization and conversion of data into other formats. For example, Conduit allows you to :&lt;/p&gt;
&lt;p&gt;Synchronize your Tomboy notes with another computer
Synchronize your your PIM data to your mobile phone, iPod, Nokia Internet tablet, or between computers
Upload photos to Flickr, Picasa, SmugMug, ShutterFly and your iPod
Any combination you can imagine, Conduit will take care of the conversion and synchronization.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://text-processing.com/demo/sentiment/"&gt;Python NLTK Sentiment Analysis with Text Classification Demo&lt;/a&gt; - neat demo but the results aren't intuitive. maybe the training set isn't great.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://stephenholiday.com/articles/2011/gender-prediction-with-python/"&gt;Gender Prediction with Python : Stephen Holiday&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>best-practices</category><category>classification</category><category>compiler</category><category>data-structures</category><category>demo</category><category>generators</category><category>gnome</category><category>icon</category><category>ios</category><category>languages</category><category>lectures</category><category>links</category><category>linux</category><category>localization</category><category>mit</category><category>monitoring</category><category>nltk</category><category>osx</category><category>performance</category><category>pinboard-links</category><category>pl</category><category>programming</category><category>python</category><category>scala</category><category>scripting</category><category>sentiment</category><category>shell</category><category>sync</category><category>text-classification</category><category>tool</category><category>video-lectures</category><category>vm</category><category>web</category><guid>http://michael-mccracken.net/2012/02/links-for-february-7th-through-february-9th/</guid><pubDate>Thu, 09 Feb 2012 22:46:00 GMT</pubDate></item><item><title>Links for February 3rd through February 6th</title><link>http://michael-mccracken.net/2012/02/links-for-february-3rd-through-february-6th/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for February 3rd through February 6th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.dabeaz.com/generators/"&gt;Generator Tricks for Systems Programmers&lt;/a&gt; - cookbook of handy python generators&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.cccblog.org/2012/02/05/microsoft-research-unveils-career-reflections-collection/"&gt;Microsoft Research Unveils "Career Reflections Collection" » CCC Blog&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.lab49.com/archives/3011"&gt;The Algebra of Data, and the Calculus of Mutation » Lab49 Blog&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://labix.org/python-dateutil"&gt;python-dateutil - Labix&lt;/a&gt; - The dateutil module provides powerful extensions to the standard datetime module, available in Python 2.3+.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>cookbook</category><category>date</category><category>dateutil</category><category>generator</category><category>links</category><category>pinboard-links</category><category>programming</category><category>python</category><category>time</category><guid>http://michael-mccracken.net/2012/02/links-for-february-3rd-through-february-6th/</guid><pubDate>Tue, 07 Feb 2012 01:00:00 GMT</pubDate></item><item><title>Links for January 27th through February 3rd</title><link>http://michael-mccracken.net/2012/02/links-for-january-27th-through-february-3rd/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for January 27th through February 3rd:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.kinesis-ergo.com/fs-savant-elite.htm"&gt;Kinesis Savant Elite Programmable Foot Switches&lt;/a&gt; - 1-3 pedal programmable USB footswitches. $99-$150 or so.
needs usboverdrive for macs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.reinteract.org/trac/wiki/Tutorial/Plotting"&gt;Tutorial/Plotting - Reinteract - Trac&lt;/a&gt; - Reinteract does plotting!?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.haskell.org/ghc/docs/7.4.1/html/users_guide/compiler-plugins.html"&gt;GHC 7.4.1 Release Notes: 9.3. Compiler Plugins&lt;/a&gt; - Write a compiler plugin for Haskell in Haskell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://matt-welsh.blogspot.com/2012/01/making-universities-obsolete.html"&gt;Volatile and Decentralized: Making universities obsolete&lt;/a&gt; - Matt Welsh on problems in higher ed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>compilers</category><category>education</category><category>ergonomics</category><category>extensible-compilers</category><category>foot-switch</category><category>ghc</category><category>haskell</category><category>links</category><category>pedal</category><category>pinboard-links</category><category>plotting</category><category>python</category><category>reinteract</category><category>teaching</category><category>udacity</category><category>usb</category><guid>http://michael-mccracken.net/2012/02/links-for-january-27th-through-february-3rd/</guid><pubDate>Sat, 04 Feb 2012 02:08:00 GMT</pubDate></item></channel></rss>