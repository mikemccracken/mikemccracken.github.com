<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>michael-mccracken.net (links)</title><link>http://michael-mccracken.net/</link><description></description><language>en</language><lastBuildDate>Fri, 27 Jun 2014 10:00:50 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Selected Links from this April</title><link>http://michael-mccracken.net/2012/08/selected-links-from-this-summer.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;Since my new blogging setup doesn't automatically pull pinboard links
into summary posts like before, I'm going to run through my bookmarks
manually. Sound like fun? Let's go:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ivory.idyll.org/blog/apr-12/replication-i"&gt;Our approach to replication in computational science&lt;/a&gt; - "bioinformatician makes code and all analyses available. very admirable, and yet a little worrying that this is so rare. It is also rare in computer science, where it is arguably easier to share."&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.modsquadhockey.com/forums/"&gt;ModSquadHockey Forums&lt;/a&gt; - good reviews of equipment with painful forum UI. BTW, yes, a Bauer Concept II full shield will definitely fit a Stealth S19 (2010 model) helmet. You're welcome.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hockeymonkey.com/helmet-compatibility-charts.html"&gt;Hockey Helmet Cage/Visor Compatibility Charts&lt;/a&gt; - really useful, but sadly not fully complete. An impossible task.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.inference.phy.cam.ac.uk/opengazer/"&gt;Opengazer: open source gaze tracker for ordinary webcams&lt;/a&gt; - Presented without comment. Have you used this?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://storm.canonical.com/"&gt;Storm Python ORM&lt;/a&gt; - Python ORM from Canonical, used in launchpad.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://radar.oreilly.com/2012/04/great-machine-learning-products.html"&gt;What it takes to build great machine learning products&lt;/a&gt; - I think the answer was careful definition of the problem domain?&lt;/li&gt;
&lt;li&gt;&lt;a href="http://news.ycombinator.com/item?id=3851691"&gt;A calculator that only shows the answer after you give a suitable estimate&lt;/a&gt; - Really cool idea. The magic is in how to adjust the tolerance so it seems fair. Linked to the HN post because the comments are so polarized - it's interesting to swatch people violently miss the point.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gnu.org/software/parallel/"&gt;GNU Parallel&lt;/a&gt; - Well if you don't know, now you know: "GNU parallel is a shell tool for executing jobs in parallel using one or more computers." Super useful. You don't have to use GNU parallel if you like something else that's similar, but you should probably know at least one tool for this stuff.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://do.cooperteam.net/"&gt;GNOME + Do&lt;/a&gt; - quicksilver for gnome. I left out the part in the page title that says "Crazy Delicious" because come on, people. These are computers.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openendedgroup.com/field/"&gt;Field visualization software&lt;/a&gt; - "An environment for writing code to rapidly and experimentally assemble and explore algorithmic systems" - A really fascinating project. It looks like big ball of squeak, python, and processing that Bret Victor rolled up. I wanted to try it out in April but haven't had a chance.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://circa-lang.org/about/introduction.html"&gt;circa&lt;/a&gt; - A programming language that lets you manipulate the AST and do round trips. I forget what I meant by that exactly. I also wrote that 'state is first class'. You'd better go look at the page if that sounds interesting. Don't ask me!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's it for April. Look for May's bookmarks sometime in 2014.&lt;/p&gt;</description><category>links</category><guid>http://michael-mccracken.net/2012/08/selected-links-from-this-summer.html</guid><pubDate>Wed, 15 Aug 2012 22:06:00 GMT</pubDate></item><item><title>Links: Hacking, Music in Python, Rust &amp; unitasking</title><link>http://michael-mccracken.net/2012/04/links-hacking-music-in-python-rust-unitaskimg.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for April 5th through April 6th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://lemire.me/blog/archives/2011/06/06/why-i-still-program/"&gt;Why I still program&lt;/a&gt; - "I believe that the rejection of programming as a lower activity can be explained by the Theory of the leisure class. In effect, we do not seek utility but prestige. There is no prestige in tool-making, cooking or farming. To maximize your prestige, you must rise up to the leisure class: you work must not be immediately useful."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://lemire.me/blog/archives/2012/03/20/from-counting-citations-to-measuring-usage-help-needed/"&gt;From counting citations to measuring usage (help needed!)&lt;/a&gt; - Building a Better Citation Index&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://mailplaneapp.com/blog/entry/workhacks.com_top_3_gmail_management_apps_for_mac"&gt;workhacks.com: Top 3 Gmail Management Apps for Mac - Mailplane Blog&lt;/a&gt; - includes a list of gmail plugins that look useful&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://prezjordan.github.com/Melopy/"&gt;Melopy&lt;/a&gt; - 
&lt;code&gt;  &lt;br&gt;
    """
    &amp;gt;&amp;gt;&amp;gt; from melopy import Melopy
    &amp;gt;&amp;gt;&amp;gt; m = Melopy('mysong')
    &amp;gt;&amp;gt;&amp;gt; m.add_quarter_note('A4')
    &amp;gt;&amp;gt;&amp;gt; m.add_quarter_note('C#5')
    &amp;gt;&amp;gt;&amp;gt; m.add_quarter_note('E5')
    &amp;gt;&amp;gt;&amp;gt; m.render()
    [==================================================] 100%
    Done
    """
&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://doc.rust-lang.org/doc/tutorial.html#expression-syntax"&gt;Rust Language Tutorial: Expression Syntax&lt;/a&gt; - Starts out good, but the "leave out a semicolon to return a value" leaves a bad taste. Why overload semicolons like that? Why not just use 'ret'?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.deliberatism.com/blog/forget-self-improvement/"&gt;Forget Self-Improvement&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blogs.hbr.org/schwartz/2012/03/the-magic-of-doing-one-thing-a.html"&gt;The Magic of Doing One Thing at a Time - Tony Schwartz - Harvard Business Review&lt;/a&gt; - A few good points on avoiding multitasking burnout. Nothing too new, but maybe if people keep repeating it in places like HBR, then it'll start to become conventional business wisdom?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>business</category><category>citation</category><category>email</category><category>gmail</category><category>impact</category><category>libraries</category><category>links</category><category>machine-learning</category><category>mikechecksmail</category><category>multitasking</category><category>music</category><category>pinboard-links</category><category>productivity</category><category>programming</category><category>publication</category><category>python</category><category>ranking</category><category>research</category><category>rust</category><guid>http://michael-mccracken.net/2012/04/links-hacking-music-in-python-rust-unitaskimg.html</guid><pubDate>Wed, 11 Apr 2012 23:15:00 GMT</pubDate></item><item><title>Links: Flattr, Haskell, Haskell QuickCheck, and Stuart Cheshire (of Bolo fame)</title><link>http://michael-mccracken.net/2012/04/links-flattr-haskell-haskell-quickcheck-and-stuart-cheshire-of-bolo-fame.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for April 4th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.stuartcheshire.org/rants/Networkdynamics.html"&gt;Stuart's "Law of Networkdynamics"&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://flattr.com/"&gt;Flattr - Social micropayments&lt;/a&gt; - An interesting model that I hadn't heard of. You set a monthly amount to spend and when you see a flattr button, you click on it. They then divide your monthly amount among the people you clicked on that month.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sounds great but I have never seen a button, unless it's been hidden among many other warts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://bos.github.com/strange-loop-2011/slides/slides.html#(1)"&gt;Haskell: Functional Programming, Solid Code, Big Data (1)&lt;/a&gt; - Bryan O'Sullivan's Haskell tutorial from Strange Loop 2011&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.yellosoft.us/quickcheck"&gt;QuickCheck | YELLOSOFT&lt;/a&gt; - Lots of ports of QuickCheck&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://dan.bravender.us/2009/6/21/Simple_Quickcheck_implementation_for_Python.html"&gt;Simple Quickcheck implementation for Python&lt;/a&gt; - Random test generation that is not as nice as Haskell's quickcheck but will do the job.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>cite:wmf</category><category>crowdfunding</category><category>haskell</category><category>latency</category><category>links</category><category>money</category><category>pinboard-links</category><category>presentation</category><category>programming</category><category>python</category><category>quickcheck</category><category>social</category><category>support</category><category>testing</category><category>tutorial</category><guid>http://michael-mccracken.net/2012/04/links-flattr-haskell-haskell-quickcheck-and-stuart-cheshire-of-bolo-fame.html</guid><pubDate>Fri, 06 Apr 2012 23:20:00 GMT</pubDate></item><item><title>Links: Haskell, Music OCD Tools, Terrorism, Probability for Ranking things</title><link>http://michael-mccracken.net/2012/04/links-haskell-music-ocd-tools-terrorism-probability-for-ranking-things.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for March 30th through April 3rd:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://magicmaps.evanmiller.org/"&gt;Magic Maps: Now You See It.&lt;/a&gt; - Very cool app for working with maps and time series data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://evanmiller.org/how-not-to-sort-by-average-rating.html"&gt;How Not To Sort By Average Rating&lt;/a&gt; - Shows the best way to sort by positive/negative rankings that is robust to small sample sizes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://m.foreignaffairs.com/articles/66186/john-mueller-and-mark-g-stewart/hardly-existential"&gt;terrorism hardly existential threat. 2010&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://mailplaneapp.com/blog/entry/workhacks.com_top_3_gmail_management_apps_for_mac/#When:12:06:06Z"&gt;workhacks.com: Top 3 Gmail Management Apps for Mac&lt;/a&gt; includes a list of gmail plugins that look useful &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.yesodweb.com/"&gt;Yesod Web Framework for Haskell&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://beets.radbox.org/"&gt;beets: the music geek's media organizer&lt;/a&gt; - The purpose of beets is to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. (It also downloads cover art for albums it imports.) Then it provides a bouquet of tools for manipulating and accessing your music.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Because beets is designed as a library, it can do almost anything you can imagine for your music collection. Via plugins, beets becomes a panacea:&lt;/p&gt;
&lt;p&gt;Embed and extract album art from files' tags.
Listen to your library with a music player that speaks the MPD protocol and works with a staggering variety of interfaces.
Fetch lyrics for all your songs from databases on the Web.
Manage your MusicBrainz music collection.
Analyze music files' metadata from the command line.
Clean up crufty tags left behind by other, less-awesome tools.
Browse your music library graphically through a Web browser and play it in any browser that supports HTML5 Audio.&lt;/p&gt;</description><category>apps</category><category>framework</category><category>gmail</category><category>haskell</category><category>links</category><category>maps</category><category>music</category><category>ocd</category><category>pinboard-links</category><category>plugins</category><category>policy</category><category>programming</category><category>ranking</category><category>score</category><category>statistics</category><category>tagging</category><category>terrorism</category><category>web</category><guid>http://michael-mccracken.net/2012/04/links-haskell-music-ocd-tools-terrorism-probability-for-ranking-things.html</guid><pubDate>Fri, 06 Apr 2012 23:16:00 GMT</pubDate></item><item><title>Canonical design blog on Holistic UI</title><link>http://michael-mccracken.net/2012/03/canonical-design-blog-on-where-small-pieces-loosely-joined-needs-some-tweaking.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;a href="http://design.canonical.com/2012/03/holistic-ui-is-smarter-ux/"&gt;Holistic UI is smarter UX&lt;/a&gt; - They use notifications as an example of why small pieces loosely joined might not be great UI. It's really interesting to see how common UI devices such as notifications have evolved across various platforms. Someone should do a gallery of notifications over the years - bonus points if you start with a ␇!</description><category>canonical</category><category>design</category><category>links</category><category>notifications</category><category>pinboard-links</category><category>unix</category><guid>http://michael-mccracken.net/2012/03/canonical-design-blog-on-where-small-pieces-loosely-joined-needs-some-tweaking.html</guid><pubDate>Fri, 30 Mar 2012 19:29:00 GMT</pubDate></item><item><title>Links for mid-March see scalable python around corners. And Future Spies on Facebook!</title><link>http://michael-mccracken.net/2012/03/links-for-mid-march-see-scalable-python-around-corners-and-future-spies-on-facebook.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for March 18th through March 26th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://highscalability.com/blog/2012/3/26/7-years-of-youtube-scalability-lessons-in-30-minutes.html"&gt;7 Years of YouTube Scalability Lessons in 30 Minutes&lt;/a&gt; - Notes from a PyCon talk about the very pragmatic design philosophy at YouTube.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/bkad/discoball"&gt;bkad/discoball * GitHub&lt;/a&gt; - shell tool to match and colorize lines of text&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pragprog.com/book/kcdc/the-developer-s-code"&gt;The Pragmatic Bookshelf | The Developer's Code&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.nature.com/news/how-to-see-around-corners-1.10258"&gt;How to see around corners : Nature News &amp;amp; Comment&lt;/a&gt; - And we thought the future was flying cars.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.theregister.co.uk/2012/03/19/cia_internet_of_things/page2.html"&gt;ARM's ultra-low-power fridge-puter chips: Just what the CIA ordered • The Register&lt;/a&gt; - Out of context interesting quote: "The spy boss was chiefly concerned with the huge amounts of data that can be collected from American citizens who intend to become CIA agents - in an age when parents set up Twitter and Tumblr accounts for their newborns, managing the identities of future operatives suddenly becomes non-trivial."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://reprog.wordpress.com/2012/02/27/who-needs-access-you-need-access/"&gt;Who needs access? You need access!&lt;/a&gt; - new site about open access to research aimed at lay people (I think)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>ARM</category><category>CIA</category><category>architecture</category><category>colorize</category><category>future</category><category>imaging</category><category>internet-of-things</category><category>laser</category><category>links</category><category>logging</category><category>openaccess</category><category>philosophy</category><category>pinboard-links</category><category>programming</category><category>python</category><category>research</category><category>scalability</category><category>shell</category><category>spies</category><category>spycam</category><category>wisdom</category><guid>http://michael-mccracken.net/2012/03/links-for-mid-march-see-scalable-python-around-corners-and-future-spies-on-facebook.html</guid><pubDate>Fri, 30 Mar 2012 19:20:00 GMT</pubDate></item><item><title>Links: JS, LaTeX, Live drawing and sound.</title><link>http://michael-mccracken.net/2012/03/links-js-latex-live-drawing-and-sound.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for March 5th through March 17th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://codemirror.net/"&gt;CodeMirror&lt;/a&gt; - "CodeMirror is a JavaScript library that can be used to create a relatively pleasant editor interface for code-like content ― computer programs, HTML markup, and similar. If a mode has been written for the language you are editing, the code will be coloured, and the editor will optionally help you with indentation."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://tacosw.com/latexian/"&gt;Latexian: A LaTeX Editor for Mac OS X&lt;/a&gt; - Nice looking latex editor with live preview.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10.6 or higher so I can't try it just now.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=JupqhcT4ONY"&gt;Core Graphics live - YouTube&lt;/a&gt; - Demo of live-preview graphics drawing tool&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://drc-fir.sourceforge.net/"&gt;DRC: Digital Room Correction&lt;/a&gt; - "RC is a program used to generate correction filters for acoustic compensation of HiFi and audio systems in general, including listening room compensation. DRC generates just the FIR correction filters, which can be used with a real time or offline convolver to provide real time or offline correction. DRC doesn't provide convolution features, and provides only some simplified, although really accurate, measuring tools."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/shoaibkamil/asp/wiki"&gt;ASP: A SEJITS Implementation for Python * shoaibkamil/asp Wiki * GitHub&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>JIT</category><category>acoustic</category><category>audio</category><category>coregraphics</category><category>drawing</category><category>editor</category><category>home-theater</category><category>javascript</category><category>latex</category><category>links</category><category>mac</category><category>macosx</category><category>pinboard-links</category><category>programming</category><category>python</category><category>sejits</category><category>speakers</category><category>syntax-highlighting</category><guid>http://michael-mccracken.net/2012/03/links-js-latex-live-drawing-and-sound.html</guid><pubDate>Mon, 19 Mar 2012 21:29:00 GMT</pubDate></item><item><title>Links: More PyPy, Academia, Censorship we Love, and Monads</title><link>http://michael-mccracken.net/2012/03/more-pypy-academia-censorship-we-love-and-monads.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for March 1st through March 5th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/8452396/does-pypy-translate-itself/8569919#8569919"&gt;python - Does PyPY translate itself? - Stack Overflow&lt;/a&gt; - An informative answer about how PyPy works&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://lars.com/2011/01/08/on-reviewing-research-papers/"&gt;On reviewing research papers « Lars Bergstrom&lt;/a&gt; - So, PL has a culture of really useful reviews, huh?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.paulgraham.com/love.html"&gt;How to Do What You Love&lt;/a&gt; - "If you think something's supposed to hurt, you're less likely to notice if you're doing it wrong. That about sums up my experience of graduate school."&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Boom!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.themillions.com/2012/03/ban-this-book-an-uncensored-look-at-the-lorax-and-other-dangerous-books.html"&gt;The Millions : Ban This Book: An Uncensored Look At The Lorax And Other Dangerous Books&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.sigfpe.com/2006/08/you-could-have-invented-monads-and.html"&gt;A Neighborhood of Infinity: You Could Have Invented Monads! (And Maybe You Already Have.)&lt;/a&gt; - A practical way of thinking about monads.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>academia</category><category>haskell</category><category>links</category><category>monads</category><category>pg</category><category>pinboard-links</category><category>programming</category><category>publishing</category><category>pypy</category><category>python</category><category>research</category><category>rpy</category><guid>http://michael-mccracken.net/2012/03/more-pypy-academia-censorship-we-love-and-monads.html</guid><pubDate>Tue, 06 Mar 2012 19:39:00 GMT</pubDate></item><item><title>Links: Structure editing, Unix History, OSS Legal Issues Primer</title><link>http://michael-mccracken.net/2012/03/links-structure-editing-unix-history-oss-legal-issues-primer.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for February 27th through March 1st:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://news.ycombinator.com/item?id=3649518"&gt;Pretty Lisp | Hacker News&lt;/a&gt; I don't like this. Great comment thread though - lots of people agree with me. I think maybe enthusiasm for structure editors is a sign of youthful optimism and inexperience.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://interviews.slashdot.org/story/04/10/18/1153211/rob-pike-responds"&gt;2004 Rob Pike Q&amp;amp;A Interview - Slashdot&lt;/a&gt; - "(And speaking of Doug, he's the unsung hero of Unix. He was manager of the group that produced it and a huge creative force in the group, but he's almost unknown in the Unix community. He invented a couple of things you might have heard of: pipes and - get this - macros. Well, someone had to do it and that someone was Doug. As Ken once said when we were talking one day in the Unix room, "There's no one smarter than Doug.") 
"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://news.ycombinator.com/item?id=3638045"&gt;How To Build a Naive Bayes Classifier | Hacker News&lt;/a&gt; - Useful comment thread about building naive bayes classifiers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.softwarefreedom.org/resources/2008/foss-primer.html#x1-130002.5"&gt;A Legal Issues Primer for Open Source and Free Software Projects - Software Freedom Law Center&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>bayes</category><category>bell-labs</category><category>foss</category><category>javascript</category><category>legal</category><category>links</category><category>open-source</category><category>parsing</category><category>pinboard-links</category><category>pratt</category><category>probability</category><category>programming</category><category>statistics</category><category>unix</category><guid>http://michael-mccracken.net/2012/03/links-structure-editing-unix-history-oss-legal-issues-primer.html</guid><pubDate>Thu, 01 Mar 2012 20:53:00 GMT</pubDate></item><item><title>Links: Cheap wardrobe, App Stores, Javascript &amp; Parsing.</title><link>http://michael-mccracken.net/2012/03/links-cheap-wardrobe-app-stores-javascript-parsing.html</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for February 23rd:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://putthison.com/post/17161826063"&gt;Strategic Frugality If you're just starting to build a...&lt;/a&gt; - where you can skimp!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.chuqui.com/2012/02/dealing-with-crap-apps-in-the-catalog/"&gt;Dealing with Crap apps in the catalog…&lt;/a&gt; - chuq on the tough problem of policing app stores.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.jslint.com/"&gt;JSLint,The JavaScript Code Quality Tool&lt;/a&gt; - From Douglas Crockford&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.javascriptlint.com/"&gt;JavaScript Lint&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zaach.github.com/jison/"&gt;Jison&lt;/a&gt; - javascript bison with a yacc-alike too&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://effbot.org/zone/simple-top-down-parsing.htm"&gt;Simple Top-Down Parsing in Python&lt;/a&gt; - Pratt Parsing in Python. (After Douglas Crockford's Javascript version)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;def expression(rbp=0):
    global token
    t = token
    token = next()
    left = t.nud()
    while rbp &amp;lt; token.lbp:
        t = token
        token = next()
        left = t.led(left)
    return left&lt;/p&gt;</description><category>apple</category><category>appstore</category><category>clothes</category><category>dressing</category><category>javascript</category><category>led</category><category>links</category><category>lint</category><category>nud</category><category>parser-generator</category><category>parsing</category><category>pinboard-links</category><category>pratt</category><category>programming</category><category>put-this-on</category><category>python</category><category>ties</category><category>tools</category><category>wardrobe</category><guid>http://michael-mccracken.net/2012/03/links-cheap-wardrobe-app-stores-javascript-parsing.html</guid><pubDate>Thu, 01 Mar 2012 20:51:00 GMT</pubDate></item></channel></rss>