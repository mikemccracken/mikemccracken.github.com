<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>michael-mccracken.net (concurrency)</title><link>http://michael-mccracken.net/</link><description></description><language>en</language><lastBuildDate>Tue, 17 Mar 2015 08:30:05 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Links for January 20th through January 21st</title><link>http://michael-mccracken.net/2012/01/links-for-january-20th-through-january-21st/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for January 20th through January 21st:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.kickstarter.com/projects/1380180715/mail-pilot-email-reimagined"&gt;Mail Pilot: Email Reimagined by Josh Milas &amp;amp; Alex Obenauer — Kickstarter&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://--"&gt;“Getting Into Modeling With CouchCocoa”&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://corp.galois.com/"&gt;Galois - Home&lt;/a&gt; - Contract Research organization in Portland who makes use of functional programming.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://book.realworldhaskell.org/read/"&gt;Book: Real World Haskell&lt;/a&gt; - Full text of book "real world haskell"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.cs.nott.ac.uk/~gmh/book.html"&gt;Programming in Haskell&lt;/a&gt; - well-reviewed intro haskell book&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.bluebytesoftware.com/blog/2010/01/03/ABriefRetrospectiveOnTransactionalMemory.aspx"&gt;Joe Duffy's Weblog : A (brief) retrospective on transactional memory&lt;/a&gt; - Not really brief. Lots of interesting detail about TM in practice.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.ezyang.com/2011/11/how-to-read-haskell/"&gt;How to read Haskell like Python : Inside 233&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>HPC</category><category>STM</category><category>TM</category><category>Transactional-Memory</category><category>book</category><category>code</category><category>concurrency</category><category>functional</category><category>government</category><category>haskell</category><category>languages</category><category>links</category><category>pinboard-links</category><category>portland</category><category>programming</category><category>reading</category><guid>http://michael-mccracken.net/2012/01/links-for-january-20th-through-january-21st/</guid><pubDate>Mon, 23 Jan 2012 04:50:00 GMT</pubDate></item><item><title>Links for January 12th through January 18th</title><link>http://michael-mccracken.net/2012/01/links-for-january-12th-through-january-18th/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for January 12th through January 18th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://stevenf.com/notes/"&gt;Steven Frank: Notes: Home&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.stanford.edu/~ttinoco/cvxpy/"&gt;CVXPY documentation -- CVXPY v0.0.1 documentation&lt;/a&gt; - Optimization, uses Disciplined Convex Programming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://chplib.wordpress.com/2010/02/04/progression-supporting-optimisation-in-haskell/"&gt;Progression: Supporting Optimisation in Haskell « Communicating Haskell Processes&lt;/a&gt; - Tools for benchmarking haskell performance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.jamesmolloy.co.uk/tutorial_html/1.-Environment%20setup.html"&gt;1.-Environment setup&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.gprolog.org/"&gt;The GNU Prolog web site&lt;/a&gt; - Free GNU Prolog - supports ISO&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.ciaohome.org/"&gt;The Ciao System&lt;/a&gt; - "Ciao is a general-purpose programming language which supports logic, constraint, functional, higher-order, and object-oriented programming styles. Its main design objectives are high expressive power, extensibility, safety, reliability, and efficient execution"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://marmalade-repo.org/"&gt;Marmalade: Spreadable Elisp&lt;/a&gt; - A repository for elisp packages. Uses ELPA. Didn't work when I tried it, but maybe a firewall issue?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.haskell.org/haddock/"&gt;Haddock Documentation Generator for Haskell&lt;/a&gt; - Really nice documentation generator for Haskell code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I particularly like the synopsis tab.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://caml.inria.fr/pub/ml-archives/caml-list/2002/11/64c14acb90cb14bedb2cacb73338fb15.fr.html"&gt;Archives of the Caml mailing list &amp;gt; Message from Xavier Leroy [2002]&lt;/a&gt; - From 2002:
"In summary: there is no SMP support in OCaml, and it is very very
unlikely that there will ever be.  If you're into parallelism, better
investigate message-passing interfaces."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://caml.inria.fr/pub/ml-archives/caml-list/2002/04/a20d07d890dc2ebd525fbe3eed177492.en.html"&gt;Archives of the Caml mailing list &amp;gt; Message from Benjamin C. Pierce&lt;/a&gt; - Lots of links about CPS and continuations in Ocaml and others.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>Cite:rentzsch</category><category>Kernel</category><category>caml</category><category>concurrency</category><category>continuations</category><category>cps</category><category>cvxpy</category><category>documentation</category><category>elisp</category><category>emacs</category><category>functional-programming</category><category>funny</category><category>haskell</category><category>languages</category><category>links</category><category>lisp</category><category>modeling</category><category>ocaml</category><category>optimization</category><category>package-manager</category><category>parallelism</category><category>performance</category><category>pinboard-links</category><category>profiling</category><category>programming</category><category>prolog</category><category>python</category><category>sml</category><category>tools</category><guid>http://michael-mccracken.net/2012/01/links-for-january-12th-through-january-18th/</guid><pubDate>Thu, 19 Jan 2012 19:44:00 GMT</pubDate></item><item><title>Links for September 27th through October 14th</title><link>http://michael-mccracken.net/2011/10/links-for-september-27th-through-october-14th/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;p&gt;My shared links for September 27th through October 14th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://code.google.com/p/pyprocessing/"&gt;pyprocessing - A Processing-like environment for doing graphics with Python - Google Project Hosting&lt;/a&gt; - processing in python. uses pyglet. installs very easily&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.ece.ucdavis.edu/~jowens/commonerrors.html"&gt;Common Errors in Technical Writing&lt;/a&gt; - A list of common errors and peeves in technical writing. Very useful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://soft.vub.ac.be/~smarr/renaissance/"&gt;Renaissance: Harness Emergence to Avoid the Concurrency Trap&lt;/a&gt; - Languages for non-deterministic computing, and a manycore squeak VM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://waxy.org/2011/09/geeks_guide_to_portland_2011/"&gt;Geek's Guide to Portland 2011 - Waxy.org&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://candyspotting.com/index.php/cards/holiday/houndstooth-snowsuit.html"&gt;Candyspotting - Houndstooth Snowsuit Card - Holiday&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.llvm.org/2011/09/greedy-register-allocation-in-llvm-30.html"&gt;LLVM Project Blog: Greedy Register Allocation in LLVM 3.0&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://ergo.human.cornell.edu/CUESitStand.html"&gt;CUergo: Sitting and Standing&lt;/a&gt; - Short version: sit at your desk, but get up every 20 minutes and move around for 2 minutes. That's probably a good time to focus your eyes somewhere else too.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pandas.sourceforge.net/"&gt;pandas: powerful Python data analysis toolkit -- pandas v0.4.0 documentation&lt;/a&gt; - python package for labeled multidimensional data&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>bibtex</category><category>christmas</category><category>concurrency</category><category>exascale</category><category>food</category><category>gift</category><category>graphics</category><category>greeting-card</category><category>guide</category><category>languages</category><category>latex</category><category>links</category><category>ly</category><category>pinboard-links</category><category>portland</category><category>processing</category><category>programming</category><category>python</category><category>research</category><category>sly</category><category>smalltalk</category><category>squeak</category><category>tips</category><category>travel</category><category>visualization</category><category>winter</category><category>writing</category><guid>http://michael-mccracken.net/2011/10/links-for-september-27th-through-october-14th/</guid><pubDate>Mon, 24 Oct 2011 23:58:00 GMT</pubDate></item></channel></rss>