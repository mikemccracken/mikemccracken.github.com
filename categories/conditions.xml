<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>michael-mccracken.net (conditions)</title><link>http://michael-mccracken.net/</link><description></description><atom:link rel="self" href="http://michael-mccracken.net/categories/conditions.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 13 Nov 2015 19:12:34 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Link: The Axis of Eval: What's a condition system and why do you want one?</title><link>http://michael-mccracken.net/2011/06/link-the-axis-of-eval-whats-a-condition-system-and-why-do-you-want-one/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;A nice explanation of conditions in Common Lisp from Manuel Simoni, with example code. This looks like a major improvement on the exception handling in any language I've used for anything big.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://axisofeval.blogspot.com/2011/04/whats-condition-system-and-why-do-you.html"&gt;The Axis of Eval: What's a condition system and why do you want one?&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>conditions</category><category>exceptions</category><category>lisp</category><category>programming</category><guid>http://michael-mccracken.net/2011/06/link-the-axis-of-eval-whats-a-condition-system-and-why-do-you-want-one/</guid><pubDate>Wed, 29 Jun 2011 00:08:00 GMT</pubDate></item></channel></rss>