<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>michael-mccracken.net (productivity)</title><link>http://michael-mccracken.net/</link><description></description><atom:link rel="self" href="http://michael-mccracken.net/categories/productivity.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 13 Nov 2015 19:12:28 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Links: Hacking, Music in Python, Rust &amp; unitasking</title><link>http://michael-mccracken.net/2012/04/links-hacking-music-in-python-rust-unitaskimg/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;My shared links for April 5th through April 6th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://lemire.me/blog/archives/2011/06/06/why-i-still-program/"&gt;Why I still program&lt;/a&gt; - "I believe that the rejection of programming as a lower activity can be explained by the Theory of the leisure class. In effect, we do not seek utility but prestige. There is no prestige in tool-making, cooking or farming. To maximize your prestige, you must rise up to the leisure class: you work must not be immediately useful."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://lemire.me/blog/archives/2012/03/20/from-counting-citations-to-measuring-usage-help-needed/"&gt;From counting citations to measuring usage (help needed!)&lt;/a&gt; - Building a Better Citation Index&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://mailplaneapp.com/blog/entry/workhacks.com_top_3_gmail_management_apps_for_mac"&gt;workhacks.com: Top 3 Gmail Management Apps for Mac - Mailplane Blog&lt;/a&gt; - includes a list of gmail plugins that look useful&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://prezjordan.github.com/Melopy/"&gt;Melopy&lt;/a&gt; - 
&lt;code&gt;  &lt;br&gt;
    """
    &amp;gt;&amp;gt;&amp;gt; from melopy import Melopy
    &amp;gt;&amp;gt;&amp;gt; m = Melopy('mysong')
    &amp;gt;&amp;gt;&amp;gt; m.add_quarter_note('A4')
    &amp;gt;&amp;gt;&amp;gt; m.add_quarter_note('C#5')
    &amp;gt;&amp;gt;&amp;gt; m.add_quarter_note('E5')
    &amp;gt;&amp;gt;&amp;gt; m.render()
    [==================================================] 100%
    Done
    """
&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://doc.rust-lang.org/doc/tutorial.html#expression-syntax"&gt;Rust Language Tutorial: Expression Syntax&lt;/a&gt; - Starts out good, but the "leave out a semicolon to return a value" leaves a bad taste. Why overload semicolons like that? Why not just use 'ret'?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.deliberatism.com/blog/forget-self-improvement/"&gt;Forget Self-Improvement&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blogs.hbr.org/schwartz/2012/03/the-magic-of-doing-one-thing-a.html"&gt;The Magic of Doing One Thing at a Time - Tony Schwartz - Harvard Business Review&lt;/a&gt; - A few good points on avoiding multitasking burnout. Nothing too new, but maybe if people keep repeating it in places like HBR, then it'll start to become conventional business wisdom?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>business</category><category>citation</category><category>email</category><category>gmail</category><category>impact</category><category>libraries</category><category>links</category><category>machine-learning</category><category>mikechecksmail</category><category>multitasking</category><category>music</category><category>pinboard-links</category><category>productivity</category><category>programming</category><category>publication</category><category>python</category><category>ranking</category><category>research</category><category>rust</category><guid>http://michael-mccracken.net/2012/04/links-hacking-music-in-python-rust-unitaskimg/</guid><pubDate>Wed, 11 Apr 2012 23:15:00 GMT</pubDate></item><item><title>Links for December 13th through December 19th</title><link>http://michael-mccracken.net/2011/12/links-for-december-13th-through-december-19th/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;My shared links for December 13th through December 19th:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.patientslikeme.com/"&gt;Treatment and Side Effect Info from Patients Like You : PatientsLikeMe&lt;/a&gt; - &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://insidehpc.com/2011/12/13/nvidia-opens-cuda-compiler-source-code/"&gt;NVIDIA open sources compiler for CUDA based on LLVM&lt;/a&gt; - tweeted by insideHPC at 12/13/11 7:19 PM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.aosabook.org/en/index.html"&gt;The Architecture of Open Source Applications&lt;/a&gt; - Architects look at thousands of buildings during their training, and study critiques of those buildings written by masters. In contrast, most software developers only ever get to know a handful of large programs well--usually programs they wrote themselves--and never study the great programs of history. As a result, they repeat one another's mistakes rather than building on one another's successes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This book's goal is to change that. In it, the authors of twenty-five open source applications explain how their software is structured, and why. What are each program's major components? How do they interact? And what did their builders learn during their development? In answering these questions, the contributors to this book provide unique insights into how they think.&lt;/p&gt;
&lt;p&gt;If you are a junior developer, and want to learn how your more experienced colleagues think, this book is the place to start. If you are an intermediate or senior developer, and want to see how your peers have solved hard design problems, this book can help you too.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.neverworkintheory.org/?p=197"&gt;An Empirical Comparison of the Accuracy Rates of Novices using the Quorum, Perl, and Randomo Programming Languages - It will never work in theory&lt;/a&gt; - We present here an empirical study comparing the accuracy rates of novices writing software in three programming languages: Quorum, Perl, and Randomo. The first language, Quorum, we call an evidence-based programming language, where the syntax, semantics, and API designs change in correspondence to the latest academic research and literature on programming language usability. Second, while Perl is well known, we call Randomo a Placebo-language, where some of the syntax was chosen with a random number generator and the ASCII table. We compared novices that were programming for the first time using each of these languages, testing how accurately they could write simple programs using common program constructs (e.g., loops, conditionals, functions, variables, parameters). Results showed that while Quorum users were afforded significantly greater accuracy compared to those using Perl and Randomo, Perl users were unable to write programs more accurately than those using a language designed by chance&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>architecture</category><category>community</category><category>documentary</category><category>empirical-software-engineering</category><category>http://twitter.com/insideHPC/status/146761306207301633)</category><category>links</category><category>medicine</category><category>movies</category><category>opensource</category><category>pinboard-links</category><category>productivity</category><category>programming</category><category>software</category><guid>http://michael-mccracken.net/2011/12/links-for-december-13th-through-december-19th/</guid><pubDate>Tue, 27 Dec 2011 20:12:00 GMT</pubDate></item><item><title>VoodooPad, OmniFocus and Terminal Integration Wish List</title><link>http://michael-mccracken.net/2011/07/voodoopad-omnifocus-and-terminal-integration-wish-list/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;Here are some features I want but I'll never have time to write the scripts for VoodooPad to do.&lt;/p&gt;
&lt;p&gt;I use VP mostly as a running log of notes, shell commands and todos. I also use OmniFocus for task tracking, but sometimes it's easier to just start typing in VP and work out the tasks later. So I often end up with VP pages that have a bunch of todos mixed in with project headers and miscellaneous notes.&lt;/p&gt;
&lt;p&gt;I've been thinking some integration would be nice. I want an &lt;del&gt;&lt;a href="http://orgmode.org/"&gt;emacs org-mode&lt;/a&gt;&lt;/del&gt; (update: I meant &lt;a href="http://www.isi.edu/~johnh/SOFTWARE/NOTES_MODE/"&gt;notes-mode&lt;/a&gt;) style "new day" script that creates a new page for the day and does the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adds a link to the new page to the previous note page&lt;/li&gt;
&lt;li&gt;moves any pending todos (I mark them as lines starting with a &amp;lt;# todo #&amp;gt; placeholder so I can jump to them) off yesterday's page and into OmniFocus &lt;/li&gt;
&lt;li&gt;starts a new header (line starting with #, in bold) in the new page for every header that had leftover todos. These headers usually correspond to projects in OmniFocus.&lt;/li&gt;
&lt;li&gt;adds new headers and todo lines for any tasks that are due today&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I want to have VP autocomplete project names from OmniFocus when I start a header line. Then add a link next to the new header pointing to the last page containing that header. &lt;/p&gt;
&lt;p&gt;I'd also like to have OmniFocus update the VP document when I check off a task in OF - I want to use VP as a log, so I can track down when I did something. Maybe projects should all have their own VP pages, that are kind of an auto-updated index of progress on the tasks.&lt;/p&gt;
&lt;p&gt;It'd also be nice if when I edited a todo line in VP, it could update OF. I guess I want VP to be an supplemental synchronized view onto my OF tasks.&lt;/p&gt;
&lt;p&gt;For the Terminal: I do a lot of copying and pasting shell commands into VP so I can remember things like important paths, or the exact configure settings I used to build something two years ago. This is really useful, but it'd be nice if it was easier to do without leaving the terminal. Ideally I could just prefix a command with something like '@' to add it to the current page in VP (or '@pagename#headername' to get fancy). You could get this with a script named '@' - on your local machine. But it also has to work when you're working remotely, so it will get a little more complicated.&lt;/p&gt;
&lt;p&gt;Finally - this is something I wanted to try doing with an InputManager before that mechanism went away: I'd like CamelCase links in every text field on the system (probably with some exceptions) to automatically link to VP pages. But it sounds like the days of modifying system-wide behavior on Macs are history, so I'll probably never get this. Who knows, maybe it would've been a disaster. &lt;/p&gt;
&lt;p&gt;I always thought the path to improvement in work computing was more and deeper integration between 3rd-party apps, as well as more system functionality that's usable by all those apps, but it looks to me* like in OS X we're only getting the latter.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;* - since 10.7 is about to come out, it might be worth pointing out that I have no special advance developer info. I haven't even been a dev program member for a few years now.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</description><category>productivity</category><category>tips</category><guid>http://michael-mccracken.net/2011/07/voodoopad-omnifocus-and-terminal-integration-wish-list/</guid><pubDate>Wed, 06 Jul 2011 21:05:00 GMT</pubDate></item><item><title>New Release of EagleFiler</title><link>http://michael-mccracken.net/2009/07/new-release-of-eaglefiler/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;From &lt;a href="http://c-command.com/blog/2009/07/28/eaglefiler-147/"&gt;C-Command Blog -  EagleFiler 1.4.7&lt;/a&gt;: a bunch of nice refinements.&lt;/p&gt;
&lt;p&gt;I use EagleFiler to keep track of reference documents that I get in emails. Presentations, reports, etc - the kind of thing that would usually just get stored in the mail archive. Because I want a complete mail archive &lt;em&gt;and&lt;/em&gt; a fast way to get to the important stuff, I keep the important stuff in EagleFiler so I can add tags and searches don't get a lot of false hits.&lt;/p&gt;&lt;/div&gt;</description><category>mac</category><category>mail</category><category>organization</category><category>productivity</category><guid>http://michael-mccracken.net/2009/07/new-release-of-eaglefiler/</guid><pubDate>Tue, 28 Jul 2009 18:22:00 GMT</pubDate></item><item><title>Something Buckets</title><link>http://michael-mccracken.net/2009/02/something-buckets/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;Alex Payne's recent post &lt;a href="http://al3x.net/2009/01/31/against-everything-buckets.html"&gt;The case against everything buckets&lt;/a&gt; makes a strong point in favor of using the filesystem for filing. To paraphrase: If your problem is that you have a bunch of files you need to search through, and possibly tag, then the filesystem and Spotlight are probably closer to solving your problem than you expect.&lt;/p&gt;
&lt;p&gt;I enjoyed reading his post, because I like rules of thumb for simple design, and one of my favorites is "why not just use files?" - there are often reasons to do something else, but the filesystem is faster, more reliable, and more open than anything you're likely to come up with on the first try. So you'd better be sure you're not just poorly reimplementing it.&lt;/p&gt;
&lt;p&gt;Buzz Andersen has a &lt;a href="http://log.scifihifi.com/post/76989703/everything-buckets"&gt;thorough response&lt;/a&gt;, centering on the fact that VoodooPad is a very useful app. Certainly I agree - I use it all the time, and its hyperlinking sets it apart from other notes apps (and the filesystem). So yes, VoodooPad is a Good Idea.&lt;/p&gt;
&lt;p&gt;But is VoodooPad really an "Everything Bucket"? I'm not sold - you can use it to store PDFs and images and other files, but it really focuses on pages, and those files are just attachments to your pages. I see it as a notes app. I think if your problem is keeping notes - with images if necessary, linking between them, and searching those notes, then VoodooPad is clearly better than the filesystem. But you don't have to put everything else in there too.&lt;/p&gt;
&lt;p&gt;I agree with Alex that I don't want one program to keep everything in a proprietary database. I like apps that keep my files as files. (like &lt;a href="http://c-command.com/eaglefiler/"&gt;EagleFiler&lt;/a&gt;.) But I do want layers on top of the filesystem - you wouldn't want to use just files for email, for example.&lt;/p&gt;
&lt;p&gt;The only solution that's always bad is the solution to someone else's problem.&lt;/p&gt;&lt;/div&gt;</description><category>mac</category><category>productivity</category><category>VoodooPad</category><guid>http://michael-mccracken.net/2009/02/something-buckets/</guid><pubDate>Tue, 10 Feb 2009 15:27:00 GMT</pubDate></item><item><title>go juggle — an attention callback</title><link>http://michael-mccracken.net/2008/08/go-juggle-an-attention-callback/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;Sometimes progress on a project for me consists of a few short bursts of activity in between stretches of waiting for some long-running thing to complete so I can figure out what I need to do with it next.&lt;/p&gt;
&lt;p&gt;Because I always have more than one project going, I don't actually wait much. I just switch workspaces and try to make progress on the next thing. If I can't make progress on anything immediate, I'll end up checking email or looking up something for a side project.&lt;/p&gt;
&lt;p&gt;This kind of multitasking is inefficient, but inevitable when I might have to wait for 20 minutes or more for a compute job or a compile to finish.&lt;/p&gt;
&lt;p&gt;The problem with this approach is that the things I'm waiting for often finish while I'm off doing something else, and if I get too involved, the low-priority research or emails will eat up my day while the high-priority work sits waiting for me.&lt;/p&gt;
&lt;p&gt;I've attacked this problem in the past when using OS X with &lt;a href="http://michael-mccracken.net/2008/08/go-juggle-an-attention-callback/gr"&gt;growl&lt;/a&gt;, but I can't call growlnotify from remote systems. However, I just found &lt;a href="http://michael-mccracken.net/2008/08/go-juggle-an-attention-callback/dzen"&gt;dzen&lt;/a&gt; for X Windows, a lightweight notification display utility that compiles easily on every system I've tried, and works remotely with ssh X forwarding.&lt;/p&gt;
&lt;p&gt;I wrote a simple script called &lt;code&gt;go&lt;/code&gt;, which just executes its arguments and runs &lt;code&gt;dzen&lt;/code&gt; when it's done. Now I type (for example) &lt;code&gt;go make&lt;/code&gt; and I can switch over to something else, confident that I'll see a big popup window letting me know when I can get back to working on my highest priority project.&lt;/p&gt;
&lt;p&gt;Here's basically the entire &lt;code&gt;go&lt;/code&gt; script:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="c"&gt;#!/bin/ksh&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt; completed on &lt;span class="sb"&gt;`&lt;/span&gt;hostname&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="p"&gt;|&lt;/span&gt; dzen2 -p -h &lt;span class="m"&gt;64&lt;/span&gt; -bg darkblue
&lt;/pre&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;It's simple but it's working great for me. I've tried some improvements like randomizing window placement to avoid overlapping notifications, but the simple version above really does all I need.&lt;/p&gt;
&lt;p&gt;Finally, a couple of details. zsh always seems to want to spell-check 'go', so I really named it '~/bin/executeAndNotify.sh' and just aliased 'go' to that.
Also, I've found it can mess with shell quoting as is, so sometimes I have to do &lt;code&gt;'somecommand ; go echo done'&lt;/code&gt;. If someone has a tip on getting the quoting right in the script, I'd love to hear it. The problem crops up when you try something like 'go make CC="cc -g"' - the quotes don't make it through.&lt;/p&gt;&lt;/div&gt;</description><category>computers</category><category>productivity</category><category>script utility productivity</category><category>scripts</category><category>X Windows</category><guid>http://michael-mccracken.net/2008/08/go-juggle-an-attention-callback/</guid><pubDate>Fri, 29 Aug 2008 02:31:00 GMT</pubDate></item><item><title>TaskPaper adds just enough to stick</title><link>http://michael-mccracken.net/2007/11/taskpaper-adds-just-enough-to-stick/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;My favorite apps, the ones that slip easily into everyday use and stick there, just start with plain text and add some extra sauce. &lt;a href="http://voodoopad.com"&gt;VoodooPad&lt;/a&gt; is a great example, and Hog Bay Software's new app &lt;a href="http://hogbaysoftware.com/products/taskpaper"&gt;TaskPaper&lt;/a&gt; is, too.&lt;/p&gt;
&lt;p&gt;I've used both &lt;a href="http://kinkless.com/kgtd"&gt;kgtd&lt;/a&gt; and &lt;a href="http://bargiel.home.pl/iGTD/"&gt;iGTD&lt;/a&gt;, and played around with a few others. I came closest to sticking with a system using kgtd, but switched to iGTD because manually syncing kgtd got old.&lt;/p&gt;
&lt;p&gt;All the extra &lt;em&gt;stuff&lt;/em&gt; in iGTD was appealing, but I left tasks in the inbox for weeks, and never reviewed much of my vast forest of projects. I eventually fell back into tending short lists in Stickies, with titles like "&lt;strong&gt;NOW&lt;/strong&gt;:" and "&lt;strong&gt;BY TUESDAY!&lt;/strong&gt;:".&lt;/p&gt;
&lt;p&gt;When I moved those Stickies lists into TaskPaper, all I had to do was copy and paste - it uses the same format I do when I get lazy, and that has to be a good sign. I haven't found a reason to jot a note somewhere else yet.&lt;/p&gt;
&lt;p&gt;Moving tasks from iGTD was more sobering. Half those "next actions" had been done for weeks, and the other half were clearly scheduled for next Neversday. As Merlin Mann pointed out, &lt;a href="http://www.43folders.com/2007/06/04/getting-ready-for-omnifocus"&gt;switching apps is a good excuse for a real review&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;TaskPaper adds automatic formatting, tabs, search, and a bit of hyperlinking to plain text.
Tasks are lines that start with a dash, and can be tagged by starting any word with an at-sign. Clicking a tag starts a search for that tag. I use them in a couple of ways - as contexts, and for scheduling. They can really be anything that makes sense as a visible search keyword.&lt;/p&gt;
&lt;p&gt;I have been keeping a few tabs open - one to edit tasks, and a couple others with live searches to look at what's on my plate. When I want to schedule something, I'll tag it as @now or @tomorrow - I have those two as open tabs, and as I work I keep the @now tab open.
Other tabs come and go to look at contexts, like @email or @errand.&lt;/p&gt;
&lt;p&gt;I like that the tags can be part of the sentence, so I don't have to tab through a bunch of controls to set tags - I just write something like '@email Bob @home'... easy.&lt;/p&gt;
&lt;p&gt;I also set up an inbox project (by typing "Inbox:", naturally) to collect notes quickly, and that's worked pretty well so far.&lt;/p&gt;
&lt;p&gt;As with any 1.0, there's some room for improvement. It's not very scriptable, but it is plain text, so it could be worked around. Quicksilver integration was important with both kGTD and iGTD, and I'm not sure yet if I'll really miss that here.
It can clean up tasks marked as done into an "Archive" project, but doesn't yet note when they were finished, if that kind of thing matters to you. Finally, I'm not sure what the best way to sync with other devices would be, but there is a &lt;a href="http://hogbaysoftware.com/products/taskpaper_web"&gt;web interface&lt;/a&gt; in development - maybe that would be a good iPhone option.&lt;/p&gt;
&lt;p&gt;TaskPaper is a solid, clear, and nicely minimalist app. Over the week I've been using it, it has made keeping to-dos in one place too easy to avoid, and added just enough functionality to sort through them without being distracting.&lt;/p&gt;
&lt;p&gt;Note:
When I downloaded the 1.0 release, I found a conflict with TextExtras and wrote a &lt;a href="http://hogbaysoftware.com/forums/taskpaper/topics/294_Archive_bug_in_1_22_"&gt;bug report&lt;/a&gt;. In reply, Jesse sent me a complimentary license. Nice guy. I was going to write about it anyway, but I thought I should mention that I got it for free, as a surprise.&lt;/p&gt;&lt;/div&gt;</description><category>mac</category><category>productivity</category><category>reviews</category><guid>http://michael-mccracken.net/2007/11/taskpaper-adds-just-enough-to-stick/</guid><pubDate>Thu, 01 Nov 2007 19:47:00 GMT</pubDate></item><item><title>Processing Email</title><link>http://michael-mccracken.net/2007/07/processing-email/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;I watched Merlin Mann's &lt;a href="http://www.43folders.com/2007/07/25/merlins-inbox-zero-talk/"&gt;Google Tech Talk about processing email&lt;/a&gt; yesterday, and even though I'd followed his posts on &lt;a href="http://inboxzero.com"&gt;Inbox Zero&lt;/a&gt; when they came out, it's good to get a reminder, and Merlin's an entertaining speaker - I recommend you watch it.&lt;/p&gt;
&lt;p&gt;He talks about strategies for keeping an empty inbox based on processing email as it comes in, and deciding what to do with each message as you read it so nothing just sits there reminding you of vague, unspecified amounts of work you need to deal with sometime.&lt;/p&gt;
&lt;p&gt;You may have to accept on faith that an empty inbox is a worthwhile goal. Some people &lt;a href="http://www.wordyard.com/2007/07/12/inbox-slaves/"&gt;disagree&lt;/a&gt;, but I think it's safe to say that for most people, moving the things you get as email into more appropriate places like notes apps, calendars or to-do lists is a great way to get in control of your work. Process it, then get to work. I've been doing this for a while, and it's a good feeling to know you don't have any surprises laying forgotten in old mail.&lt;/p&gt;
&lt;p&gt;One point from Merlin's talk that I'd like to comment on is that email is just a medium, and it's worth thinking about whether it's really the best medium for what you're trying to do. This has been in my mind lately as I've been working on a project with a series of parallel email-based heavily technical conversations, sometimes with three or four people replying every couple of minutes. I struggle with the feeling that email is just not the best way to do this, but it seems like the only way to include everyone.&lt;/p&gt;
&lt;p&gt;Merlin made the point that sometimes email dysfunction is just a symptom of an organizational communications problem, and no amount of email system adjustment can solve it. I agree - if you're really just tracking bugs, use a bug tracker. If you're coordinating things in real time, use IMs or IRC. If you're collaborating on a document, use something like Google Docs. Please stop overloading email.&lt;/p&gt;&lt;/div&gt;</description><category>email</category><category>productivity</category><guid>http://michael-mccracken.net/2007/07/processing-email/</guid><pubDate>Thu, 26 Jul 2007 19:11:00 GMT</pubDate></item><item><title>The read-once email client and reference emails</title><link>http://michael-mccracken.net/2007/06/the-read-once-email-client-and-reference-emails/</link><dc:creator>Michael McCracken</dc:creator><description>&lt;div&gt;&lt;p&gt;I've been dreaming of a new kind of email client, one that only lets you look at a new email once. That's right - you get to scan it for 30 seconds and then you have to do something with it or it gets archived out of sight. And you can only look at one email at a time. I think it'd be a great way to focus on getting your inbox empty and doing something useful with each message.&lt;/p&gt;
&lt;p&gt;Doing something would be replying to it, archiving or deleting it, creating a todo about it or sending it to a notes program for reference. I really think that last one's important: Email clients aren't for storing notes - send it somewhere else where you can link it up and annotate it more easily.&lt;/p&gt;
&lt;p&gt;I don't have any suggestions about how to make your email client do this, but I have come up with something for making reference emails more useful, using VoodooPad.&lt;/p&gt;
&lt;p&gt;I've been using &lt;a href="http://www.indev.ca/MailActOn.html"&gt;Mail Act-On&lt;/a&gt; &lt;a href="http://www.43folders.com/2006/09/15/mail-act-on/"&gt;as described by Merlin Mann&lt;/a&gt; to quickly move messages to appropriate mailboxes, and I've been able to keep a clean inbox. But - I never bother to look at the emails I send to the reference folder. They're basically useless without more context.&lt;/p&gt;
&lt;p&gt;I just wrote a quick script to send selected emails to &lt;a href="http://voodoopad.com/"&gt;voodoopad&lt;/a&gt; as a new page so I can link to them, add notes, and then later, search those reference emails in the same context as my notes. It's already made a big difference in how useful emails are - I can add comments to myself, find related notes in my VP doc, and since there's now a URL for every page in my VP docs, I can even link to reference emails from outside of VP - like in iGTD.&lt;/p&gt;
&lt;p&gt;If you're interested in the script, it's here: &lt;a href="http://michael-mccracken.net/2007/NewVPPageFromEmail.scpt"&gt;NewVPPageFromEmail.scpt&lt;/a&gt;  (control-click and save-as).&lt;/p&gt;&lt;/div&gt;</description><category>email</category><category>productivity</category><guid>http://michael-mccracken.net/2007/06/the-read-once-email-client-and-reference-emails/</guid><pubDate>Fri, 08 Jun 2007 21:58:00 GMT</pubDate></item></channel></rss>