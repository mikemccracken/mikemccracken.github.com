<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mac | michael-mccracken.net]]></title>
  <link href="http://mikemccracken.github.com/blog/categories/mac/atom.xml" rel="self"/>
  <link href="http://mikemccracken.github.com/"/>
  <updated>2012-08-15T23:19:38-07:00</updated>
  <id>http://mikemccracken.github.com/</id>
  <author>
    <name><![CDATA[Michael McCracken]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting notes to work with LaTeX Beamer and Skim]]></title>
    <link href="http://mikemccracken.github.com/blog/2010/04/30/getting-notes-to-work-with-latex-beamer-and-skim/"/>
    <updated>2010-04-30T02:34:56-07:00</updated>
    <id>http://mikemccracken.github.com/blog/2010/04/30/getting-notes-to-work-with-latex-beamer-and-skim</id>
    <content type="html"><![CDATA[<p>I'm writing a presentation with <a href="http://bitbucket.org/rivanvx/beamer/wiki/Home">Beamer</a>, a LaTeX class for making PDF slides.</p>

<p>There's a built-in way to generate "notes", which was geared towards Acrobat Reader - it basically makes a double-wide PDF page and Reader will show the 'notes' page on the second screen. (I'm guessing it assumes your laptop screen is arranged on the right of your presentation screen, it's the same size or bigger, etc...)</p>

<p>This doesn't work for my personal favorite PDF reader, <a href="http://skim-app.sf.net">Skim</a> - but luckily there is a full explanation of how to make it work on the <a href="http://sourceforge.net/apps/mediawiki/skim-app/index.php?title=Tips_and_Tricks#Interaction_with_LaTeX_Beamer">Skim Wiki: Tips and Tricks page</a>. The short of it is you create three tex files - one with all the content and two wrappers that generate two versions of the same presentation. One version has slides and the other has notes. Then you can set up Skim to auto-scroll the notes PDF as you move through the slides PDF in presentation mode.</p>

<p>Big thanks to whoever wrote that tip - and to Christiaan for making such a great app.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tinkering]]></title>
    <link href="http://mikemccracken.github.com/blog/2009/09/07/tinkering/"/>
    <updated>2009-09-07T05:04:59-07:00</updated>
    <id>http://mikemccracken.github.com/blog/2009/09/07/tinkering</id>
    <content type="html"><![CDATA[<p>I really liked a recent post by Alex Payne titled <a href="http://al3x.net/2009/08/10/switching-season.html">Switching Season</a>.  He says he gets an itch every year or so to go try something different, and I can sympathize. What he says at the end really resonates:</p>

<blockquote><p>Itâ€™s about computer <em>usage</em> as a creative act, something that becomes harder and harder to experience the more proficient one gets with a computer.</p></blockquote>

<p>I feel this way every once in a while too - It used to be fun just getting a computer to do something. Once you know enough about how it works and most of what you do is handled pretty smoothly, some of the fun goes out of it. The problem with high-quality free apps like Mail and Address Book is that they remove the motivation for people to tinker with new ways of using computers for the same old things.</p>

<p>This urge to tinker is pretty strong, at least for me, and I think it might be one reason why I'm not so excited about web and mobile (at least iPhone) programming. Both platforms have a lot going for them, but the barrier to tinkering with my data is high - sometimes I can't get my data out of a service, and if I want to write scripts to combine two web apps, where do they run?</p>

<p>For example, I've seen a lot of great things come from the community built around BibDesk's scripting interface, and if it were a web app, none of that would have happened.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Subversion Client Issues]]></title>
    <link href="http://mikemccracken.github.com/blog/2009/07/13/subversion-clients/"/>
    <updated>2009-07-13T00:17:14-07:00</updated>
    <id>http://mikemccracken.github.com/blog/2009/07/13/subversion-clients</id>
    <content type="html"><![CDATA[<p>I use subversion, and won't switch to something newer for a while, so it's worth looking at how to polish that old hammer. I'm used to using the command line svn, or emacs. But recently I decided to try out a few of the nice GUI clients that are around, including <a href="http://versionsapp.com/">Versions</a>, <a href="http://zigzig.com/">ZigVersion</a> and <a href="http://www.zennaware.com/cornerstone/">Cornerstone</a>.</p>

<p>Of these, the only one that's polished enough to lure me away from emacs and seems to support my favorite mode of working is Cornerstone, and it still gets it a little wrong.</p>

<p>I like to write log comments while looking at (and scrolling through) the diffs for the files I'm committing. This means I want a text field for writing log comments on the same screen as the diffs, that isn't modal, and doesn't stop me from moving around between multiple diffs.</p>

<p>As far as I could tell, I couldn't get the comment field and the diff display shown together in Versions, and while I could in ZigVersion, that app had a subpar diff display and lacked polish overall, missing key shortcuts where I'd expect them, for instance. Cornerstone almost lets me do what I want, but it displays the comment field in a modal sheet, so I have to cancel to change which diff I'm looking at.</p>

<p>This is easy in emacs, but I like a nicer diff GUI. Am I just missing something? This feels like a natural workflow, so it seems strange that no clients support it well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Something Buckets]]></title>
    <link href="http://mikemccracken.github.com/blog/2009/02/09/something-buckets/"/>
    <updated>2009-02-09T23:27:49-08:00</updated>
    <id>http://mikemccracken.github.com/blog/2009/02/09/something-buckets</id>
    <content type="html"><![CDATA[<p>Alex Payne's recent post <a href="http://al3x.net/2009/01/31/against-everything-buckets.html">The case against everything buckets</a> makes a strong point in favor of using the filesystem for filing. To paraphrase: If your problem is that you have a bunch of files you need to search through, and possibly tag, then the filesystem and Spotlight are probably closer to solving your problem than you expect.</p>

<p>I enjoyed reading his post, because I like rules of thumb for simple design, and one of my favorites is "why not just use files?" - there are often reasons to do something else, but the filesystem is faster, more reliable, and more open than anything you're likely to come up with on the first try. So you'd better be sure you're not just poorly reimplementing it.</p>

<p>Buzz Andersen has a <a href="http://log.scifihifi.com/post/76989703/everything-buckets">thorough response</a>, centering on the fact that VoodooPad is a very useful app. Certainly I agree - I use it all the time, and its hyperlinking sets it apart from other notes apps (and the filesystem). So yes, VoodooPad is a Good Idea.</p>

<p>But is VoodooPad really an "Everything Bucket"? I'm not sold - you can use it to store PDFs and images and other files, but it really focuses on pages, and those files are just attachments to your pages. I see it as a notes app. I think if your problem is keeping notes - with images if necessary, linking between them, and searching those notes, then VoodooPad is clearly better than the filesystem. But you don't have to put everything else in there too.</p>

<p>I agree with Alex that I don't want one program to keep everything in a proprietary database. I like apps that keep my files as files. (like <a href="http://c-command.com/eaglefiler/">EagleFiler</a>.) But I do want layers on top of the filesystem - you wouldn't want to use just files for email, for example.</p>

<p>The only solution that's always bad is the solution to someone else's problem.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iCal's Text Field Jumble]]></title>
    <link href="http://mikemccracken.github.com/blog/2008/11/02/text-field-jumble/"/>
    <updated>2008-11-02T06:38:46-08:00</updated>
    <id>http://mikemccracken.github.com/blog/2008/11/02/text-field-jumble</id>
    <content type="html"><![CDATA[<p>I've written here before about text fields, particularly the problem of having a good-looking 'display' mode and a separate 'edit' mode for data you don't edit so often, like in AddressBook.</p>

<p>The most recent version of iCal decided that events are write-once-read-many as well. You now have to use cmd-E to get into edit mode, while cmd-I just gives you a small display mode.</p>

<p>I'm mostly OK with that, although I find I edit events about as often as I look at their info windows - after editing I usually just deal with alarms, not the events themselves. The casual glance at the time and title is always enough - I think either you're looking at the time and title or you're editing. I don't see the appeal in the new 'info-only' mode (if it's actually new - it seems new.)</p>

<p>However, the change does highlight the jumble of editable text fields and text-like fields in the edit window:
<a href="http://michael-mccracken.net/wp2/wp-content/uploads/2008/11/pastedgraphic-1.tiff"><img src="http://michael-mccracken.net/wp2/wp-content/uploads/2008/11/pastedgraphic-1.tiff" alt="" /></a></p>

<p><a href="http://michael-mccracken.net/wp2/wp-content/uploads/2008/11/pastedgraphic.tiff"><img src="http://michael-mccracken.net/wp2/wp-content/uploads/2008/11/pastedgraphic.tiff" alt="" /></a></p>

<p>The "Add Attendees" link and the "None" placeholder for url act the same - you click on them, and enter text.
One's a link and one's mute gray text. Why?
For my part, I think the gray text is too understated, and the link is too garish.</p>

<p>There are other differences: you can tab to the "url" field, but you can't tab to "attendees"... until you add one, then you can. Once you click on either of them, the url field pops up a plain white raised NSTextField, but the attendees field is sunken and translucent, apparently an NSTokenField?</p>

<p>Both of the blue links could also be buttons. I'm still not completely sold on replacing buttons with links, but I can understand the trend. I think a small plus-sign button would be fine for "Add File", though, and "Attendees" ought to be a text field. Why force the user to use the mouse when adding data to an event?</p>

<p>All in all, I think the "Add Attendees" link/field is pretty strange. I'm curious if I missing a precedent somewhere.</p>
]]></content>
  </entry>
  
</feed>
